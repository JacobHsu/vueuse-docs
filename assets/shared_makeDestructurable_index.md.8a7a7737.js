import{o as a,c as s,b as n,e}from"./app.5f9bb12a.js";const t='{"title":"makeDestructurable","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"shared/makeDestructurable/index.md","lastUpdated":1626320652938}',o={},p=e('<h1 id="makedestructurable"><a class="header-anchor" href="#makedestructurable" aria-hidden="true">#</a> makeDestructurable</h1><p>Make isomorphic destructurable for object and array at the same time. See <a href="https://antfu.me/posts/destructuring-with-object-or-array/" target="_blank" rel="noopener noreferrer">this blog</a> for more details.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>TypeScript Example:</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> makeDestructurable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span> name<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">}</span>\n<span class="token keyword">const</span> bar<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1024</span>\n\n<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">makeDestructurable</span><span class="token punctuation">(</span>\n  <span class="token punctuation">{</span> foo<span class="token punctuation">,</span> bar <span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token keyword">const</span><span class="token punctuation">,</span>\n  <span class="token punctuation">[</span> foo<span class="token punctuation">,</span> bar <span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token keyword">const</span>\n<span class="token punctuation">)</span>\n</code></pre></div><p>Usage:</p><div class="language-ts"><pre><code><span class="token keyword">let</span> <span class="token punctuation">{</span> foo<span class="token punctuation">,</span> bar <span class="token punctuation">}</span> <span class="token operator">=</span> obj\n<span class="token keyword">let</span> <span class="token punctuation">[</span> foo<span class="token punctuation">,</span> bar <span class="token punctuation">]</span> <span class="token operator">=</span> obj\n</code></pre></div>',7),r=e('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">makeDestructurable</span><span class="token generic class-name"><span class="token operator">&lt;</span>\n  <span class="token constant">T</span> <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token punctuation">,</span> <span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  <span class="token constant">A</span> <span class="token keyword">extends</span> <span class="token keyword">readonly</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> arr<span class="token operator">:</span> <span class="token constant">A</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">&amp;</span> <span class="token constant">A</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/makeDestructurable/index.ts" target="_blank" rel="noopener noreferrer">Source</a> â€¢ <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/makeDestructurable/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4);o.render=function(e,t,o,c,l,u){return a(),s("div",null,[p,n("FOOTER_STARTS"),r,n("FOOTER_ENDS")])};export default o;export{t as __pageData};
