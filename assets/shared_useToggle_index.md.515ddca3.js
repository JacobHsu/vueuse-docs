import{_ as a}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as s,Q as n,o as e,c as o,a as t,t as p,u as l,w as c,b as r,e as u}from"./app.5f9bb12a.js";var i=s({setup(a){const[s,c]=n();return(a,n)=>(e(),o("div",null,[t("p",null,"Value: "+p(l(s)?"ON":"OFF"),1),t("button",{onClick:n[1]||(n[1]=a=>l(c)())}," Toggle "),t("button",{onClick:n[2]||(n[2]=a=>s.value=!0)}," Set ON "),t("button",{onClick:n[3]||(n[3]=a=>s.value=!1)}," Set OFF ")]))}});const k=t("h1",{id:""},[t("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#")],-1),g=u('<p>useToggle</p><p>A boolean switcher with utility functions.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useToggle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>value<span class="token punctuation">,</span> toggle<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useToggle</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p>When you pass a ref, <a href="/shared/useToggle/"><code>useToggle</code></a>will return a simple toggle function instead:</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useDark<span class="token punctuation">,</span> useToggle <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> isDark <span class="token operator">=</span> <span class="token function">useDark</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> toggleDark <span class="token operator">=</span> <span class="token function">useToggle</span><span class="token punctuation">(</span>isDark<span class="token punctuation">)</span>\n</code></pre></div>',6),d=u('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token comment">/**\n * A boolean ref with a toggler\n *\n * @see /useToggle\n * @param [initialValue=false]\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useToggle</span><span class="token punctuation">(</span>\n  value<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useToggle</span><span class="token punctuation">(</span>\n  initialValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span>Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>value<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">]</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/useToggle/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/useToggle/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/useToggle/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),h='{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"shared/useToggle/index.md","lastUpdated":1626320652938}',f={};const b=Object.assign(f,{setup:function(s){return(s,n)=>{const p=a;return e(),o("div",null,[k,t(p,null,{default:c((()=>[t(i)])),_:1}),g,r("FOOTER_STARTS"),d,r("FOOTER_ENDS")])}}});export default b;export{h as __pageData};
