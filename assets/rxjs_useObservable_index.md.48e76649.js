import{o as n,c as s,b as a,e as t}from"./app.5f9bb12a.js";const p='{"title":"useObservable","description":"","frontmatter":"category \'@RxJS\'","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"rxjs/useObservable/index.md","lastUpdated":1626320652934}',o={},e=t('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>available in add-on <a href="/rxjs/README.html"><code>@vueuse/rxjs</code></a></p></div><h1 id="useobservable"><a class="header-anchor" href="#useobservable" aria-hidden="true">#</a> useObservable</h1><p>Use an Observable, return a ref and automatically unsubscribe from it when the component is unmounted.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useObservable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/rxjs&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> interval <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> mapTo<span class="token punctuation">,</span> startWith<span class="token punctuation">,</span> scan <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span>\n\n<span class="token comment">// setup()</span>\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">useObservable</span><span class="token punctuation">(</span>\n  <span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>\n    <span class="token function">mapTo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">startWith</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n    <span class="token function">scan</span><span class="token punctuation">(</span><span class="token punctuation">(</span>total<span class="token punctuation">,</span> next<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> next <span class="token operator">+</span> total<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n</code></pre></div><p>If you want to add custom error handling to an observable that might error, you can supply an optional <code>onError</code> configuration. Without this, RxJS will treat any error in the supplied observable as an &quot;unhandled error&quot; and it will be thrown in a new call stack and reported to <code>window.onerror</code> (or <code>process.on(&#39;error&#39;)</code> if you happen to be in node).</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useObservable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/rxjs&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> interval <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> map <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;rxjs/operators&#39;</span>\n\n<span class="token comment">// setup()</span>\n<span class="token keyword">const</span> count <span class="token operator">=</span> <span class="token function">useObservable</span><span class="token punctuation">(</span>\n  <span class="token function">interval</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>\n    <span class="token function">map</span><span class="token punctuation">(</span>n <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;oops&#39;</span><span class="token punctuation">)</span>\n      <span class="token punctuation">}</span>\n      <span class="token keyword">return</span> n <span class="token operator">+</span> n\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token function-variable function">onError</span><span class="token operator">:</span> err <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">.</span>message<span class="token punctuation">)</span> <span class="token comment">// &quot;oops&quot;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div>',7),c=t('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UseObservableOptions</span> <span class="token punctuation">{</span>\n  onError<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>err<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useObservable</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">H</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  observable<span class="token operator">:</span> Observable<span class="token operator">&lt;</span><span class="token constant">H</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> UseObservableOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> Readonly<span class="token operator">&lt;</span>Ref<span class="token operator">&lt;</span><span class="token constant">H</span><span class="token operator">&gt;&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useObservable/index.ts" target="_blank" rel="noopener noreferrer">Source</a> â€¢ <a href="https://github.com/vueuse/vueuse/blob/main/packages/rxjs/useObservable/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4);o.render=function(t,p,o,r,l,u){return n(),s("div",null,[e,a("FOOTER_STARTS"),c,a("FOOTER_ENDS")])};export default o;export{p as __pageData};
