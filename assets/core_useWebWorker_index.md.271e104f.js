import{o as a,c as s,b as n,e}from"./app.5f9bb12a.js";const t='{"title":"useWebWorker","description":"","frontmatter":"category Misc","headers":[{"level":2,"title":"Related Functions","slug":"related-functions"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useWebWorker/index.md","lastUpdated":1626320652930}',o={},p=e('<h1 id="usewebworker"><a class="header-anchor" href="#usewebworker" aria-hidden="true">#</a> useWebWorker</h1><p>Simple <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers" target="_blank" rel="noopener noreferrer">Web Workers</a> registration and communication.</p><h2 id="related-functions"><a class="header-anchor" href="#related-functions" aria-hidden="true">#</a> Related Functions</h2><p>Try out the high-level <code>useWebWorkerFn</code></p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useWebWorker <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-use-web&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> post<span class="token punctuation">,</span> terminate <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useWebWorker</span><span class="token punctuation">(</span><span class="token string">&#39;/path/to/worker.js&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><table><thead><tr><th>State</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td><code>Ref&lt;any&gt;</code></td><td>Reference to the latest data received via the worker, can be watched to respond to incoming messages</td></tr></tbody></table><table><thead><tr><th>Method</th><th>Signature</th><th>Description</th></tr></thead><tbody><tr><td>post</td><td><code>(data: any) =&gt; void</code></td><td>Sends data to the worker thread.</td></tr><tr><td>terminate</td><td><code>() =&gt; void</code></td><td>Stops and terminates the worker.</td></tr></tbody></table>',8),r=e('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token comment">/**\n * Simple Web Workers registration and communication.\n *\n * @see /useWebWorker\n * @param url\n * @param workerOptions\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useWebWorker</span><span class="token punctuation">(</span>\n  url<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n  workerOptions<span class="token operator">?</span><span class="token operator">:</span> WorkerOptions<span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> ConfigurableWindow\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  data<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span>\n  post<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> transfer<span class="token operator">:</span> Transferable<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n    <span class="token punctuation">(</span>message<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> PostMessageOptions <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n  <span class="token punctuation">}</span>\n  <span class="token function-variable function">terminate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  worker<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>Worker <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseWebWorkerReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> useWebWorker<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorker/index.ts" target="_blank" rel="noopener noreferrer">Source</a> â€¢ <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorker/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4);o.render=function(e,t,o,c,l,i){return a(),s("div",null,[p,n("FOOTER_STARTS"),r,n("FOOTER_ENDS")])};export default o;export{t as __pageData};
