import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{x as s,y as e,f as a,aA as o,r as t,Y as p,o as r,c,u as l,b as i,a as u,d as k,t as d,k as g,w as h,e as f}from"./app.5f9bb12a.js";import{_ as m}from"./Note.4d65cb61.js";const b=g("data-v-73432044");s("data-v-73432044");const v={key:0},S=k(" Your browser does not support SpeechRecognition API, "),y=u("a",{href:"https://caniuse.com/mdn-api_speechrecognition",target:"_blank"},"more details",-1),_={key:1},R={key:2,class:"mt-4"},w=u("b",null,"Please say a color",-1);e();var T=a({setup(n){const s=["aqua","azure","beige","bisque","black","blue","brown","chocolate","coral","crimson","cyan","fuchsia","ghostwhite","gold","goldenrod","gray","green","indigo","ivory","khaki","lavender","lime","linen","magenta","maroon","moccasin","navy","olive","orange","orchid","peru","pink","plum","purple","red","salmon","sienna","silver","snow","tan","teal","thistle","tomato","turquoise","violet","white","yellow","transparent"],e=`#JSGF V1.0; grammar colors; public <color> = ${s.join(" | ")} ;`,a=o({continuous:!0}),g=t("transparent");if(a.isSupported){const n=new(window.SpeechGrammarList||window.webkitSpeechGrammarList);n.addFromString(e,1),a.recognition.grammars=n,p(a.result,(()=>{for(const n of a.result.value.toLowerCase().split(" ").reverse())if(s.includes(n)){g.value=n;break}}))}const h=t([]),f=()=>{g.value="transparent",a.result.value="",h.value=function(n,s){const e=n.slice(0);let a,o,t=n.length;for(;t--;)o=Math.floor((t+1)*Math.random()),a=e[o],e[o]=e[t],e[t]=a;return e.slice(0,s)}(s,5),a.start()},{isListening:T,isSupported:A,stop:C,result:I}=a;return(n,s)=>{const e=m;return r(),c("div",null,[l(A)?(r(),c("div",_,[l(T)?i("v-if",!0):(r(),c("button",{key:0,onClick:f}," Press and talk ")),l(T)?(r(),c("button",{key:1,class:"orange",onClick:s[1]||(s[1]=(...n)=>l(C)&&l(C)(...n))}," Stop ")):i("v-if",!0),l(T)?(r(),c("div",R,[u(e,{class:"mb-2"},{default:b((()=>[w])),_:1}),u(e,{class:"mb-2"},{default:b((()=>[k(" try: "+d(h.value.join(", ")),1)])),_:1}),u("p",{class:"tag",style:{background:g.value}},d(l(I)),5)])):i("v-if",!0)])):(r(),c("div",v,[S,y]))])}}});T.__scopeId="data-v-73432044";const A=f('<h1 id="usespeechrecognition"><a class="header-anchor" href="#usespeechrecognition" aria-hidden="true">#</a> useSpeechRecognition</h1><p>Reactive <a href="https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition" target="_blank" rel="noopener noreferrer">SpeechRecognition</a>.</p><blockquote><p><a href="https://caniuse.com/mdn-api_speechrecognition" target="_blank" rel="noopener noreferrer">Can I use?</a></p></blockquote><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useSpeechRecognition <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span>\n  isSupported<span class="token punctuation">,</span>\n  isListening<span class="token punctuation">,</span>\n  isFinal<span class="token punctuation">,</span>\n  result<span class="token punctuation">,</span>\n  start<span class="token punctuation">,</span>\n  stop\n<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSpeechRecognition</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="options"><a class="header-anchor" href="#options" aria-hidden="true">#</a> Options</h3><p>The following shows the default values of the options, they will be directly passed to <a href="https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition" target="_blank" rel="noopener noreferrer">SpeechRecognition API</a>.</p><div class="language-ts"><pre><code><span class="token punctuation">{</span>\n  lang<span class="token operator">:</span> <span class="token string">&#39;en-US&#39;</span><span class="token punctuation">,</span>\n  interimResults<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  continuous<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',8),C=f('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">SpeechRecognitionOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableWindow</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Controls whether continuous results are returned for each recognition, or only a single result.\n   *\n   * @default true\n   */</span>\n  continuous<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Controls whether interim results should be returned (true) or not (false.) Interim results are results that are not yet final\n   *\n   * @default true\n   */</span>\n  interimResults<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Langauge for SpeechRecognition\n   *\n   * @default &#39;en-US&#39;\n   */</span>\n  lang<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Reactive SpeechRecognition.\n *\n * @see /useSpeechRecognition\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition SpeechRecognition\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useSpeechRecognition</span><span class="token punctuation">(</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> SpeechRecognitionOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  isSupported<span class="token operator">:</span> <span class="token builtin">boolean</span>\n  isListening<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  isFinal<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  recognition<span class="token operator">:</span> SpeechRecognition <span class="token operator">|</span> <span class="token keyword">undefined</span>\n  result<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>\n  error<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>SpeechRecognitionErrorEvent <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span>\n  <span class="token function-variable function">toggle</span><span class="token operator">:</span> <span class="token punctuation">(</span>value<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token function-variable function">start</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token function-variable function">stop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseSpeechRecognitionReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span>\n  <span class="token keyword">typeof</span> useSpeechRecognition\n<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechRecognition/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechRecognition/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useSpeechRecognition/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),I='{"title":"useSpeechRecognition","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Options","slug":"options"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useSpeechRecognition/index.md","lastUpdated":1626320652930}',P={};const x=Object.assign(P,{setup:function(s){return(s,e)=>{const a=n;return r(),c("div",null,[u(a,null,{default:h((()=>[u(T)])),_:1}),A,i("FOOTER_STARTS"),C,i("FOOTER_ENDS")])}}});export default x;export{I as __pageData};
