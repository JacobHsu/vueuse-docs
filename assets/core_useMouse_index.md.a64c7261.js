import{_ as s}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as n,I as a,aj as e,o,c as t,t as p,u as c,a as r,w as l,b as u,e as i}from"./app.5f9bb12a.js";import{s as k}from"./utils.8fd68d5f.js";const d={lang:"yaml"};var h=n({setup(s){const n=a(e()),r=k(n);return(s,n)=>(o(),t("pre",d,p(c(r)),1))}});const m=i('<h1 id="usemouse"><a class="header-anchor" href="#usemouse" aria-hidden="true">#</a> useMouse</h1><p>Reactive mouse position</p><h2 id="basic-usage"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useMouse <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> source <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMouse</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p>Touch is enabled by default. To only detect mouse changes, set <code>touch</code> to <code>false</code>. The <code>dragover</code> event is used to track mouse position while dragging.</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> x<span class="token punctuation">,</span> y <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMouse</span><span class="token punctuation">(</span><span class="token punctuation">{</span> touch<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="component"><a class="header-anchor" href="#component" aria-hidden="true">#</a> Component</h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UseMouse</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ x, y }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  x: {{ x }}\n  y: {{ y }}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UseMouse</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',8),g=i('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">MouseOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableWindow</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Listen to `touchmove` events\n   *\n   * @default true\n   */</span>\n  touch<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Reset to initial value when `touchend` event fired\n   *\n   * @default false\n   */</span>\n  resetOnTouchEnds<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Initial values\n   */</span>\n  initialValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    x<span class="token operator">:</span> <span class="token builtin">number</span>\n    y<span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">MouseSourceType</span> <span class="token operator">=</span> <span class="token string">&quot;mouse&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;touch&quot;</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n<span class="token comment">/**\n * Reactive mouse position.\n *\n * @see /useMouse\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useMouse</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> MouseOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  x<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  y<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  sourceType<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>MouseSourceType<span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseMouseReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> useMouse<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMouse/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMouse/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMouse/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),y='{"title":"useMouse","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Basic Usage","slug":"basic-usage"},{"level":2,"title":"Component","slug":"component"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useMouse/index.md","lastUpdated":1626320652926}',f={};const v=Object.assign(f,{setup:function(n){return(n,a)=>{const e=s;return o(),t("div",null,[r(e,null,{default:l((()=>[r(h)])),_:1}),m,u("FOOTER_STARTS"),g,u("FOOTER_ENDS")])}}});export default v;export{y as __pageData};
