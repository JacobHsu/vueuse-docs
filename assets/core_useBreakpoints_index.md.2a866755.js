import{_ as s}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as n,o as a,c as e,a as t,u as p,d as o,K as l,L as c,w as r,b as k,e as u}from"./app.5f9bb12a.js";import{_ as i}from"./BooleanDisplay.vue_vue&type=script&setup=true&lang.eaf6a217.js";const d={class:"font-mono"},b=o(" sm: "),g=o(" md: "),v=o(" lg: "),m=o(" xl: "),f=o("2xl: "),y=o("3xl: ");var w=n({setup(s){const n=l(c),o=n.smaller("sm"),r=n.between("sm","md"),k=n.between("md","lg"),u=n.between("lg","xl"),w=n.between("xl","2xl"),h=n.greater("2xl");return(s,n)=>{const l=i;return a(),e("div",d,[t("div",null,[b,t(l,{value:p(o)},null,8,["value"])]),t("div",null,[g,t(l,{value:p(r)},null,8,["value"])]),t("div",null,[v,t(l,{value:p(k)},null,8,["value"])]),t("div",null,[m,t(l,{value:p(u)},null,8,["value"])]),t("div",null,[f,t(l,{value:p(w)},null,8,["value"])]),t("div",null,[y,t(l,{value:p(h)},null,8,["value"])])])}}});const h=u('<h1 id="usebreakpoints"><a class="header-anchor" href="#usebreakpoints" aria-hidden="true">#</a> useBreakpoints</h1><p>Reactive viewport breakpoints</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useBreakpoints<span class="token punctuation">,</span> breakpointsTailwind <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> breakpoints <span class="token operator">=</span> <span class="token function">useBreakpoints</span><span class="token punctuation">(</span>breakpointsTailwind<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> smAndLarger <span class="token operator">=</span> breakpoints<span class="token punctuation">.</span><span class="token function">greater</span><span class="token punctuation">(</span><span class="token string">&#39;sm&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useBreakpoints <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> breakpoints <span class="token operator">=</span> <span class="token function">useBreakpoints</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  tablet<span class="token operator">:</span> <span class="token number">640</span><span class="token punctuation">,</span>\n  laptop<span class="token operator">:</span> <span class="token number">1024</span><span class="token punctuation">,</span>\n  desktop<span class="token operator">:</span> <span class="token number">1280</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> laptop <span class="token operator">=</span> breakpoints<span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token string">&#39;laptop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;desktop&#39;</span><span class="token punctuation">)</span>\n</code></pre></div>',5),_=u('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token operator">*</span> <span class="token keyword">from</span> <span class="token string">&quot;./breakpoints&quot;</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">Breakpoints<span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span>\n  <span class="token constant">K</span><span class="token punctuation">,</span>\n  <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span>\n<span class="token operator">&gt;</span>\n<span class="token comment">/**\n * Reactively viewport breakpoints\n *\n * @see /useBreakpoints\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useBreakpoints</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token builtin">string</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  breakpoints<span class="token operator">:</span> Breakpoints<span class="token operator">&lt;</span><span class="token constant">K</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> ConfigurableWindow\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  <span class="token function">greater</span><span class="token punctuation">(</span>k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  <span class="token function">smaller</span><span class="token punctuation">(</span>k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  <span class="token function">between</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  <span class="token function">isGreater</span><span class="token punctuation">(</span>k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token function">isSmaller</span><span class="token punctuation">(</span>k<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token function">isInBetween</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseBreakpointsReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> useBreakpoints<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useBreakpoints/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useBreakpoints/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useBreakpoints/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),T='{"title":"useBreakpoints","description":"","frontmatter":"category Browser","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useBreakpoints/index.md","lastUpdated":1626320652922}',B={};const x=Object.assign(B,{setup:function(n){return(n,p)=>{const o=s;return a(),e("div",null,[t(o,null,{default:r((()=>[t(w)])),_:1}),h,k("FOOTER_STARTS"),_,k("FOOTER_ENDS")])}}});export default x;export{T as __pageData};
