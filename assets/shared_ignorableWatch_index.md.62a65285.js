import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as s,r as a,a_ as t,o as e,c as o,a as p,t as c,w as l,F as r,d as u,b as k,e as i}from"./app.5f9bb12a.js";import{_ as d}from"./Note.4d65cb61.js";const g=p("br",null,null,-1),h=u("Log");var m=s({setup(n){a();const s=a(""),u=a(0),{ignoreUpdates:k}=t(u,(n=>s.value+=`Changed to "${n}"\n`),{flush:"sync"}),i=()=>{u.value=0,s.value=""},m=()=>{u.value++},f=()=>{k((()=>{u.value++}))};return(n,a)=>{const t=d;return e(),o(r,null,[p("div",null,"Value: "+c(u.value),1),p("button",{onClick:m}," Update "),p("button",{class:"orange",onClick:f}," Ignored Update "),p("button",{onClick:i}," Reset "),g,p(t,null,{default:l((()=>[h])),_:1}),p("pre",null,c(s.value),1)],64)}}});const f=i('<h1 id="ignorablewatch"><a class="header-anchor" href="#ignorablewatch" aria-hidden="true">#</a> ignorableWatch</h1><p>Ignorable watch</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>Extended <code>watch</code> that returns extra <code>ignoreUpdates(updater)</code> and <code>ignorePrevAsyncUpdates()</code> to ignore particular updates to the source.</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ignorableWatch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> stop<span class="token punctuation">,</span> ignoreUpdates <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">ignorableWatch</span><span class="token punctuation">(</span>\n  source<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Changed to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span>\n<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// logs: Changed to bar!</span>\n\n<span class="token function">ignoreUpdates</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  source<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;foobar&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// (nothing happened)</span>\n\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;hello&#39;</span>\n<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// logs: Changed to hello!</span>\n\n<span class="token function">ignoreUpdates</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  source<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;ignored&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;logged&#39;</span>\n\n<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// logs: Changed to logged!</span>\n</code></pre></div><h2 id="flush-timing"><a class="header-anchor" href="#flush-timing" aria-hidden="true">#</a> Flush timing</h2><p><a href="/shared/ignorableWatch/"><code>ignorableWatch</code></a>accepts the same options as <code>watch</code> and uses the same defaults. So, by default the composable works using <code>flush: &#39;pre&#39;</code>.</p><h2 id="ignoreprevasyncupdates"><a class="header-anchor" href="#ignoreprevasyncupdates" aria-hidden="true">#</a> <code>ignorePrevAsyncUpdates</code></h2><p>This feature is only for async flush <code>&#39;pre&#39;</code> and <code>&#39;post&#39;</code>. If <code>flush: &#39;sync&#39;</code> is used, <code>ignorePrevAsyncUpdates()</code> is a no-op as the watch will trigger immediately after each update to the source. It is still provided for sync flush so the code can be more generic.</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ignorableWatch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> nextTick <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> ignorePrevAsyncUpdates <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">ignorableWatch</span><span class="token punctuation">(</span>\n  source<span class="token punctuation">,</span>\n  <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Changed to </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span>\n<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// logs: Changed to bar!</span>\n\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;good&#39;</span>\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;by&#39;</span>\n<span class="token function">ignorePrevAsyncUpdates</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// (nothing happened)</span>\n\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;prev&#39;</span>\n<span class="token function">ignorePrevAsyncUpdates</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;after&#39;</span>\n\n<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// logs: Changed to after!</span>\n</code></pre></div><h2 id="recommended-readings"><a class="header-anchor" href="#recommended-readings" aria-hidden="true">#</a> Recommended Readings</h2><ul><li><a href="https://patak.dev/vue/ignorable-watch.html" target="_blank" rel="noopener noreferrer">Ignorable Watch</a> - by <a href="https://github.com/matias-capeletto" target="_blank" rel="noopener noreferrer">@matias-capeletto</a></li></ul>',12),b=i('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">IgnoredUpdater</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function-variable function">updater</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">IgnorableWatchReturn</span> <span class="token punctuation">{</span>\n  ignoreUpdates<span class="token operator">:</span> IgnoredUpdater\n  <span class="token function-variable function">ignorePrevAsyncUpdates</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  stop<span class="token operator">:</span> WatchStopHandle\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">ignorableWatch</span><span class="token generic class-name"><span class="token operator">&lt;</span>\n  <span class="token constant">T</span> <span class="token keyword">extends</span> Readonly<span class="token operator">&lt;</span>WatchSource<span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  Immediate <span class="token keyword">extends</span> Readonly<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  sources<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>\n  cb<span class="token operator">:</span> WatchCallback<span class="token operator">&lt;</span>MapSources<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> MapOldSources<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Immediate<span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> WatchWithFilterOptions<span class="token operator">&lt;</span>Immediate<span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> IgnorableWatchReturn\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">ignorableWatch</span><span class="token generic class-name"><span class="token operator">&lt;</span>\n  <span class="token constant">T</span><span class="token punctuation">,</span>\n  Immediate <span class="token keyword">extends</span> Readonly<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  source<span class="token operator">:</span> WatchSource<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  cb<span class="token operator">:</span> WatchCallback<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Immediate <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> WatchWithFilterOptions<span class="token operator">&lt;</span>Immediate<span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> IgnorableWatchReturn\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">ignorableWatch</span><span class="token generic class-name"><span class="token operator">&lt;</span>\n  <span class="token constant">T</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span>\n  Immediate <span class="token keyword">extends</span> Readonly<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token boolean">false</span>\n<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  source<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>\n  cb<span class="token operator">:</span> WatchCallback<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> Immediate <span class="token keyword">extends</span> <span class="token class-name"><span class="token boolean">true</span></span> <span class="token operator">?</span> <span class="token constant">T</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">:</span> <span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> WatchWithFilterOptions<span class="token operator">&lt;</span>Immediate<span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> IgnorableWatchReturn\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/ignorableWatch/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/ignorableWatch/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/ignorableWatch/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),y='{"title":"ignorableWatch","description":"","frontmatter":"category Watch","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Flush timing","slug":"flush-timing"},{"level":2,"title":"ignorePrevAsyncUpdates","slug":"ignoreprevasyncupdates"},{"level":2,"title":"Recommended Readings","slug":"recommended-readings"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"shared/ignorableWatch/index.md","lastUpdated":1626320652938}',v={};const w=Object.assign(v,{setup:function(s){return(s,a)=>{const t=n;return e(),o("div",null,[p(t,null,{default:l((()=>[p(m)])),_:1}),f,k("FOOTER_STARTS"),b,k("FOOTER_ENDS")])}}});export default w;export{y as __pageData};
