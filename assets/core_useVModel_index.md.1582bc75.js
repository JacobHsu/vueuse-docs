import{o as n,c as s,b as a,e}from"./app.5f9bb12a.js";const t='{"title":"useVModel","description":"","frontmatter":"category Component","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useVModel/index.md","lastUpdated":1626320652930}',p={},o=e('<h1 id="usevmodel"><a class="header-anchor" href="#usevmodel" aria-hidden="true">#</a> useVModel</h1><p>Shorthand for v-model binding, props + emit -&gt; ref</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useVModel <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">props<span class="token punctuation">,</span> <span class="token punctuation">{</span> emit <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">useVModel</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> <span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> emit<span class="token punctuation">)</span>\n\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// props.data</span>\n    data<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;foo&#39;</span> <span class="token comment">// emit(&#39;update:data&#39;, &#39;foo&#39;)</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',4),c=e('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">VModelOptions</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * When passive is set to `true`, it will use `watch` to sync with props and ref.\n   * Instead of relying on the `v-model` or `.sync` to work.\n   *\n   * @default false\n   */</span>\n  passive<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * When eventName is set, it&#39;s value will be used to overwrite the emit event name.\n   *\n   * @default undefined\n   */</span>\n  eventName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Shorthand for v-model binding, props + emit -&gt; ref\n *\n * @see /useVModel\n * @param props\n * @param key (default &#39;value&#39; in Vue 2 and &#39;modelValue&#39; in Vue 3)\n * @param emit\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useVModel</span><span class="token generic class-name"><span class="token operator">&lt;</span>\n  <span class="token constant">P</span> <span class="token keyword">extends</span> object<span class="token punctuation">,</span>\n  <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">P</span><span class="token punctuation">,</span>\n  Name <span class="token keyword">extends</span> <span class="token builtin">string</span>\n<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  props<span class="token operator">:</span> <span class="token constant">P</span><span class="token punctuation">,</span>\n  key<span class="token operator">?</span><span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span>\n  emit<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token operator">:</span> Name<span class="token punctuation">,</span> <span class="token operator">...</span>args<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> VModelOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span>UnwrapRef<span class="token operator">&lt;</span><span class="token constant">P</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span> <span class="token operator">|</span> WritableComputedRef<span class="token operator">&lt;</span><span class="token constant">P</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useVModel/index.ts" target="_blank" rel="noopener noreferrer">Source</a> â€¢ <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useVModel/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4);p.render=function(e,t,p,l,r,u){return n(),s("div",null,[o,a("FOOTER_STARTS"),c,a("FOOTER_ENDS")])};export default p;export{t as __pageData};
