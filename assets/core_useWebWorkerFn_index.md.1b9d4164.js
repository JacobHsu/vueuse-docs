import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as s,aL as a,a5 as e,D as t,r as o,o as p,c as r,a as c,t as l,u,w as i,b as k,F as d,d as h,aM as b,aa as g,e as m}from"./app.5f9bb12a.js";import{_ as f}from"./Note.4d65cb61.js";const w=h("Current Time: "),W=h(" This is a demo showing sort for large array (5 milion numbers) with or w/o WebWorker."),v=c("br",null,null,-1),y=h("Clock stops when UI blocking happends. "),_={key:2},T=h(" Thread: "),S=c("br",null,null,-1),F=h(" Result: ");var x=s({setup(n){const s=()=>{const n=Array(5e6).fill(void 0).map((()=>Math.trunc(5e5*Math.random())));return n.sort(),n.slice(0,5)},{workerFn:h,workerStatus:m,workerTerminate:x}=a(s),R=e(),A=t((()=>g(R.value).format("YYYY-MM-DD HH:mm:ss SSS"))),C=t((()=>"RUNNING"===m.value)),D=o(null),I=o(""),N=async()=>{D.value=null,await b(),D.value=s(),I.value="Main"},P=async()=>{D.value=null,await b(),D.value=await h(),I.value="Worker"};return(n,s)=>{const a=f;return p(),r(d,null,[c("p",null,[w,c("b",null,l(u(A)),1)]),c(a,{class:"mb-2"},{default:i((()=>[W,v,y])),_:1}),c("button",{onClick:N}," Sort in Main Thread "),u(C)?(p(),r("button",{key:1,class:"orange",onClick:s[1]||(s[1]=(...n)=>u(x)&&u(x)(...n))}," Terminate Worker ")):(p(),r("button",{key:0,onClick:P}," Sort in Worker ")),D.value?(p(),r("p",_,[T,c("strong",null,l(I.value),1),S,F,c("strong",null,l(D.value),1)])):k("v-if",!0)],64)}}});const R=m('<h1 id="usewebworkerfn"><a class="header-anchor" href="#usewebworkerfn" aria-hidden="true">#</a> useWebWorkerFn</h1><p>Run expensive function without blocking the UI, using a simple syntax that makes use of Promise. A port of <a href="https://github.com/alewin/useWorker" target="_blank" rel="noopener noreferrer">alewin/useWorker</a>.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><h3 id="basic-example"><a class="header-anchor" href="#basic-example" aria-hidden="true">#</a> Basic example</h3><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useWebWorkerFn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> workerFn <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useWebWorkerFn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token comment">// some heavy works to do in web worker</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="with-dependencies"><a class="header-anchor" href="#with-dependencies" aria-hidden="true">#</a> With dependencies</h3><div class="language-ts"><div class="highlight-lines"><br><br><br><br><br><br><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><br><br><br></div><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useWebWorkerFn <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> workerFn<span class="token punctuation">,</span> workerStatus<span class="token punctuation">,</span> workerTerminate <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useWebWorkerFn</span><span class="token punctuation">(</span>\n  dates <span class="token operator">=&gt;</span> dates<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>dateFns<span class="token punctuation">.</span>compareAsc<span class="token punctuation">)</span><span class="token punctuation">,</span> \n  <span class="token punctuation">{</span>\n    timeout<span class="token operator">:</span> <span class="token number">50000</span><span class="token punctuation">,</span>\n    dependencies<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token string">&#39;https://cdnjs.cloudflare.com/ajax/libs/date-fns/1.30.1/date_fns.js&#39;</span> <span class="token comment">// dateFns</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">)</span>\n</code></pre></div><h2 id="web-worker"><a class="header-anchor" href="#web-worker" aria-hidden="true">#</a> Web Worker</h2><p>Before you start using this function, we suggest you read the <a href="https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers" target="_blank" rel="noopener noreferrer">Web Worker</a> documentation.</p><h2 id="credit"><a class="header-anchor" href="#credit" aria-hidden="true">#</a> Credit</h2><p>This function is a Vue port of <a href="https://github.com/alewin/useWorker" target="_blank" rel="noopener noreferrer">https://github.com/alewin/useWorker</a> by Alessio Koci, with the help of <a href="https://github.com/Donskelle" target="_blank" rel="noopener noreferrer">@Donskelle</a> to migration.</p>',11),A=m('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">WebWorkerStatus</span> <span class="token operator">=</span>\n  <span class="token operator">|</span> <span class="token string">&quot;PENDING&quot;</span>\n  <span class="token operator">|</span> <span class="token string">&quot;SUCCESS&quot;</span>\n  <span class="token operator">|</span> <span class="token string">&quot;RUNNING&quot;</span>\n  <span class="token operator">|</span> <span class="token string">&quot;ERROR&quot;</span>\n  <span class="token operator">|</span> <span class="token string">&quot;TIMEOUT_EXPIRED&quot;</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">WebWorkerOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableWindow</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Number of milliseconds before killing the worker\n   *\n   * @default undefined\n   */</span>\n  timeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token comment">/**\n   * An array that contains the external dependencies needed to run the worker\n   */</span>\n  dependencies<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Run expensive function without blocking the UI, using a simple syntax that makes use of Promise.\n *\n * @see /useWebWorkerFn\n * @param fn\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> useWebWorkerFn<span class="token operator">:</span> <span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span><span class="token operator">...</span>fnArgs<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>\n  fn<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> WebWorkerOptions\n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token function-variable function">workerFn</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token operator">...</span>fnArgs<span class="token operator">:</span> Parameters<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>ReturnType<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;</span>\n  workerStatus<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>WebWorkerStatus<span class="token operator">&gt;</span>\n  <span class="token function-variable function">workerTerminate</span><span class="token operator">:</span> <span class="token punctuation">(</span>status<span class="token operator">?</span><span class="token operator">:</span> WebWorkerStatus<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseWebWorkerFnReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> useWebWorkerFn<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorkerFn/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorkerFn/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useWebWorkerFn/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),C='{"title":"useWebWorkerFn","description":"","frontmatter":"category Misc","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Basic example","slug":"basic-example"},{"level":3,"title":"With dependencies","slug":"with-dependencies"},{"level":2,"title":"Web Worker","slug":"web-worker"},{"level":2,"title":"Credit","slug":"credit"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useWebWorkerFn/index.md","lastUpdated":1626320652930}',D={};const I=Object.assign(D,{setup:function(s){return(s,a)=>{const e=n;return p(),r("div",null,[c(e,null,{default:i((()=>[c(x)])),_:1}),R,k("FOOTER_STARTS"),A,k("FOOTER_ENDS")])}}});export default I;export{C as __pageData};
