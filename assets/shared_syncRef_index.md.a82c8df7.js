import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as s,r as a,b0 as e,o as t,c as o,l as p,v as c,a as l,w as u,b as r,e as i}from"./app.5f9bb12a.js";var k=s({setup(n){const s=a(""),u=a(""),r=a("");return e(s,[u,r]),(n,a)=>(t(),o("div",null,[p(l("input",{"onUpdate:modelValue":a[1]||(a[1]=n=>s.value=n),placeholder:"Source",type:"text"},null,512),[[c,s.value]]),p(l("input",{"onUpdate:modelValue":a[2]||(a[2]=n=>u.value=n),placeholder:"Target1",type:"text"},null,512),[[c,u.value]]),p(l("input",{"onUpdate:modelValue":a[3]||(a[3]=n=>r.value=n),placeholder:"Target2",type:"text"},null,512),[[c,r.value]])]))}});const d=l("h1",{id:""},[l("a",{class:"header-anchor",href:"#","aria-hidden":"true"},"#")],-1),f=i('<p>syncRef</p><p>Keep target refs in sync with a source ref</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> syncRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> stop <span class="token operator">=</span> <span class="token function">syncRef</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> target<span class="token punctuation">)</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// hello</span>\n\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;foo&#39;</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// foo</span>\n</code></pre></div><h2 id="watch-options"><a class="header-anchor" href="#watch-options" aria-hidden="true">#</a> Watch options</h2><p>The options for <a href="/shared/syncRef/"><code>syncRef</code></a>are similar to <code>watch</code>&#39;s <code>WatchOptions</code> but with different default values.</p><div class="language-ts"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">SyncRefOptions</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Timing for syncing, same as watch&#39;s flush option\n   *\n   * @default &#39;sync&#39;\n   */</span>\n  flush<span class="token operator">?</span><span class="token operator">:</span> WatchOptions<span class="token punctuation">[</span><span class="token string">&#39;flush&#39;</span><span class="token punctuation">]</span>\n  <span class="token comment">/**\n   * Watch deeply\n   *\n   * @default false\n   */</span>\n  deep<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Sync values immediately\n   *\n   * @default true\n   */</span>\n  immediate<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p>When setting <code>{ flush: &#39;pre&#39; }</code>, the target reference will be updated at <a href="https://v3.vuejs.org/guide/reactivity-computed-watchers.html#effect-flush-timing" target="_blank" rel="noopener noreferrer">the end of the current &quot;tick&quot;</a> before rendering starts.</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> syncRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">)</span>\n\n<span class="token function">syncRef</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> target<span class="token punctuation">,</span> <span class="token punctuation">{</span> flush<span class="token operator">:</span> <span class="token string">&#39;pre&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// hello</span>\n\nsource<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;foo&#39;</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// hello &lt;- still unchanged, because of flush &#39;pre&#39;</span>\n\n<span class="token keyword">await</span> <span class="token function">nextTick</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>value<span class="token punctuation">)</span> <span class="token comment">// foo &lt;- changed!</span>\n</code></pre></div><h2 id="related-functions"><a class="header-anchor" href="#related-functions" aria-hidden="true">#</a> Related Functions</h2><ul><li><code>biSyncRef</code></li></ul>',11),h=i('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">SyncRefOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableFlushSync</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Watch deeply\n   *\n   * @default false\n   */</span>\n  deep<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Sync values immediately\n   *\n   * @default true\n   */</span>\n  immediate<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Keep target ref(s) in sync with the source ref\n *\n * @param source source ref\n * @param targets\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">syncRef</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">R</span> <span class="token keyword">extends</span> Ref<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>\n  source<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">,</span>\n  targets<span class="token operator">:</span> <span class="token constant">R</span> <span class="token operator">|</span> <span class="token constant">R</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> flush<span class="token punctuation">,</span> deep<span class="token punctuation">,</span> immediate <span class="token punctuation">}</span><span class="token operator">?</span><span class="token operator">:</span> SyncRefOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> WatchStopHandle\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRef/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRef/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/syncRef/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),g='{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Watch options","slug":"watch-options"},{"level":2,"title":"Related Functions","slug":"related-functions"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"shared/syncRef/index.md","lastUpdated":1626320652938}',m={};const y=Object.assign(m,{setup:function(s){return(s,a)=>{const e=n;return t(),o("div",null,[d,l(e,null,{default:u((()=>[l(k)])),_:1}),f,r("FOOTER_STARTS"),h,r("FOOTER_ENDS")])}}});export default y;export{g as __pageData};
