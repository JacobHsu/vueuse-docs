import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{o as s,c as a,a as e,f as t,r as p,D as o,ar as r,u as l,d as c,w as i,b as u,e as k}from"./app.5f9bb12a.js";const d={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 24 24"},v=e("path",{d:"M4 11v2h12l-5.5 5.5l1.42 1.42L19.84 12l-7.92-7.92L10.5 5.5L16 11H4z",fill:"currentColor"},null,-1);var w={name:"mdi-arrow-right",render:function(n,e){return s(),a("svg",d,[v])}};const g={class:"flex text-white items-center"},f=c(" Swipe ");var h=t({setup(n){const t=p(null),c=p(null),i=o((()=>{var n;return null==(n=c.value)?void 0:n.offsetWidth})),u=p("0"),k=p(1),d=()=>{u.value="0",k.value=1},{distanceX:v,isSwiping:h}=r(t,{onSwipe(n){if(i.value)if(v.value<0){const n=Math.abs(v.value);u.value=`${n}px`,k.value=1.25-n/i.value}else u.value="0",k.value=1},onSwipeEnd(n,s){v.value<0&&i.value&&Math.abs(v.value)/i.value>=.5?(u.value="100%",k.value=0):(u.value="0",k.value=1)}});return(n,p)=>{const o=w;return s(),a("div",{ref:c,class:"bg-gray-200 rounded-xl relative w-full h-[80px] max-w-[600px] m-auto flex items-center justify-center overflow-hidden"},[e("button",{onClick:d}," Reset "),e("div",{ref:t,class:["absolute w-full h-full top-0 left-0 bg-[#3eaf7c] flex items-center justify-center",{"transition-all duration-200 ease-linear":!l(h)}],style:{left:u.value,opacity:k.value}},[e("p",g,[f,e(o)])],6)],512)}}});const b=k('<h1 id="usepointerswipe"><a class="header-anchor" href="#usepointerswipe" aria-hidden="true">#</a> usePointerSwipe</h1><p>Reactive swipe detection based on <a href="https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent" target="_blank" rel="noopener noreferrer">PointerEvents</a>.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-html"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    Swipe here\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> isSwiping<span class="token punctuation">,</span> direction <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">usePointerSwipe</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> el<span class="token punctuation">,</span> isSwiping<span class="token punctuation">,</span> direction <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> \n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',4),m=k('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PointerSwipeOptions</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * @default 50\n   */</span>\n  threshold<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token comment">/**\n   * Callback on swipe start\n   */</span>\n  onSwipeStart<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> PointerEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">/**\n   * Callback on swipe move\n   */</span>\n  onSwipe<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> PointerEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">/**\n   * Callback on swipe end\n   */</span>\n  onSwipeEnd<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> PointerEvent<span class="token punctuation">,</span> direction<span class="token operator">:</span> SwipeDirection<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PointerPosition</span> <span class="token punctuation">{</span>\n  x<span class="token operator">:</span> <span class="token builtin">number</span>\n  y<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PointerSwipeReturn</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> isSwiping<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  direction<span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span>SwipeDirection <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span>\n  <span class="token keyword">readonly</span> posStart<span class="token operator">:</span> PointerPosition\n  <span class="token keyword">readonly</span> posEnd<span class="token operator">:</span> PointerPosition\n  distanceX<span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  distanceY<span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  <span class="token function-variable function">stop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Reactive swipe detection based on PointerEvents.\n *\n * @see /usePointerSwipe\n * @param target\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">usePointerSwipe</span><span class="token punctuation">(</span>\n  target<span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>HTMLElement <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> PointerSwipeOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> PointerSwipeReturn\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerSwipe/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerSwipe/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/usePointerSwipe/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),S='{"title":"usePointerSwipe","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/usePointerSwipe/index.md","lastUpdated":1626320652926}',y={};const _=Object.assign(y,{setup:function(t){return(t,p)=>{const o=n;return s(),a("div",null,[e(o,null,{default:i((()=>[e(h)])),_:1}),b,u("FOOTER_STARTS"),m,u("FOOTER_ENDS")])}}});export default _;export{S as __pageData};
