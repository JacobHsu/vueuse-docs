import{_ as s}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as a,r as n,o as e,c as t,u as o,l as p,v as r,b as c,a as l,t as u,ay as i,az as k,w as d,e as h}from"./app.5f9bb12a.js";var f=a({setup(s){const a=n({title:"Vueuse",text:"Collection of essential Vue Composition Utilities!",url:k?location.href:""}),{share:d,isSupported:h}=i(a),f=()=>d().catch((s=>s));return(s,n)=>(e(),t("div",null,[o(h)?p((e(),t("input",{key:0,"onUpdate:modelValue":n[1]||(n[1]=s=>a.value.text=s),type:"text",placeholder:"Note"},null,512)),[[r,a.value.text]]):c("v-if",!0),l("button",{disabled:!o(h),onClick:f},u(o(h)?"Share":"Web share is not supported in your browser"),9,["disabled"])]))}});const g=h('<h1 id="useshare"><a class="header-anchor" href="#useshare" aria-hidden="true">#</a> useShare</h1><p>Reactive <a href="https://developer.mozilla.org/en-US/docs/Web/API/Navigator/share" target="_blank" rel="noopener noreferrer">Web Share API</a>. The Browser provides features that can share content in text or file.</p><blockquote><p>The <code>share</code> method has to be called following a user gesture like a button click. It can’t simply be called on page load for example. That’s in place to help prevent abuse.</p></blockquote><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useShare <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> share<span class="token punctuation">,</span> isSupported <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useShare</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">function</span> <span class="token function">startShare</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token function">share</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;Hello&#39;</span><span class="token punctuation">,</span>\n    text<span class="token operator">:</span> <span class="token string">&#39;Hello my friend!&#39;</span><span class="token punctuation">,</span>\n    url<span class="token operator">:</span> location<span class="token punctuation">.</span>href<span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h3 id="passing-a-source-ref"><a class="header-anchor" href="#passing-a-source-ref" aria-hidden="true">#</a> Passing a source ref</h3><p>You can pass a <code>ref</code> to it, changes from the source ref will be reflected to your sharing options.</p><div class="language-js"><div class="highlight-lines"><br><br><br><br><br><br><div class="highlighted"> </div><br><br></div><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n\n<span class="token keyword">const</span> shareOptions <span class="token operator">=</span> ref<span class="token operator">&lt;</span>ShareOptions<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">{</span> text<span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> share<span class="token punctuation">,</span> isSupported <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useShare</span><span class="token punctuation">(</span>shareOptions<span class="token punctuation">)</span>\n\nshareOptions<span class="token punctuation">.</span>value<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span>\n\n<span class="token function">share</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div>',8),b=h('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ShareOptions</span> <span class="token punctuation">{</span>\n  title<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  files<span class="token operator">?</span><span class="token operator">:</span> File<span class="token punctuation">[</span><span class="token punctuation">]</span>\n  text<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  url<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Reactive Web Share API.\n *\n * @see /useShare\n * @param shareOptions\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useShare</span><span class="token punctuation">(</span>\n  shareOptions<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>ShareOptions<span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> ConfigurableNavigator\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  isSupported<span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token function-variable function">share</span><span class="token operator">:</span> <span class="token punctuation">(</span>overrideOptions<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>ShareOptions<span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseShareReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> useShare<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useShare/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useShare/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useShare/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),v='{"title":"useShare","description":"","frontmatter":"category Browser","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Passing a source ref","slug":"passing-a-source-ref"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useShare/index.md","lastUpdated":1626320652930}',y={};const S=Object.assign(y,{setup:function(a){return(a,n)=>{const o=s;return e(),t("div",null,[l(o,null,{default:d((()=>[l(f)])),_:1}),g,c("FOOTER_STARTS"),b,c("FOOTER_ENDS")])}}});export default S;export{v as __pageData};
