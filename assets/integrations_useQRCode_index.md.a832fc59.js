import{_ as a}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{r as s,Y as n,az as e,aX as t,f as o,o as p,c as r,a as c,w as l,l as u,v as i,u as d,b as k,F as g,d as h,e as f}from"./app.5f9bb12a.js";import{_ as m}from"./Note.4d65cb61.js";const v=h(" Text content for QRCode ");var _=o({setup(a){const o=s("https://vueuse.org"),h=function(a,o){const p=s(a),r=s("");return n(p,(async a=>{p.value&&e&&(r.value=await t.toDataURL(a,o))}),{immediate:!0}),r}(o,{errorCorrectionLevel:"H",margin:3});return(a,s)=>{const n=m;return p(),r(g,null,[c(n,null,{default:l((()=>[v])),_:1}),u(c("input",{"onUpdate:modelValue":s[1]||(s[1]=a=>o.value=a),type:"text"},null,512),[[i,o.value]]),o.value?(p(),r("img",{key:0,class:"mt-6 mb-2 rounded border",src:d(h),alt:"QR Code"},null,8,["src"])):k("v-if",!0)],64)}}});const R=f('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>available in add-on <a href="/integrations/README.html"><code>@vueuse/integrations</code></a></p></div><h1 id="useqrcode"><a class="header-anchor" href="#useqrcode" aria-hidden="true">#</a> useQRCode</h1><p>wrapper for <a href="https://github.com/soldair/node-qrcode" target="_blank" rel="noopener noreferrer"><code>qrcode</code></a></p><h2 id="install"><a class="header-anchor" href="#install" aria-hidden="true">#</a> Install</h2><div class="language-bash"><pre><code><span class="token function">npm</span> i qrcode\n</code></pre></div><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useQRCode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/integrations/useQRCode&#39;</span>\n\n<span class="token comment">// `qrcode` will be a ref of data URL</span>\n<span class="token keyword">const</span> qrcode <span class="token operator">=</span> <span class="token function">useQRCode</span><span class="token punctuation">(</span><span class="token string">&#39;text-to-encode&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><p>or passing a <code>ref</code> to it, the returned data URL ref will change along with the source ref&#39;s changes.</p><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useQRCode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/integrations/useQRCode&#39;</span>\n\n<span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;text-to-encode&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> qrcode <span class="token operator">=</span> <span class="token function">useQRCode</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span>\n</code></pre></div><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>qrcode<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n</code></pre></div>',10),b=f('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token comment">/**\n * Wrapper for qrcode.\n *\n * @see /useQRCode\n * @param text\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useQRCode</span><span class="token punctuation">(</span>\n  text<span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> QRCode<span class="token punctuation">.</span>QRCodeToDataURLOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/integrations/useQRCode/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/integrations/useQRCode/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/integrations/useQRCode/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),y='{"title":"useQRCode","description":"","frontmatter":"category \'@Integrations\'","headers":[{"level":2,"title":"Install","slug":"install"},{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"integrations/useQRCode/index.md","lastUpdated":1626320652934}',C={};const T=Object.assign(C,{setup:function(s){return(s,n)=>{const e=a;return p(),r("div",null,[c(e,null,{default:l((()=>[c(_)])),_:1}),R,k("FOOTER_STARTS"),b,k("FOOTER_ENDS")])}}});export default T;export{y as __pageData};
