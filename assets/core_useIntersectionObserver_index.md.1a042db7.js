import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{x as s,y as a,f as e,r as t,a6 as o,o as p,c,a as r,F as l,d as u,w as i,b as k,e as d}from"./app.5f9bb12a.js";import{_ as g}from"./BooleanDisplay.vue_vue&type=script&setup=true&lang.eaf6a217.js";s("data-v-2487947f");const b=r("p",{class:"notice"}," Scroll me down! ",-1),v=r("p",null,"Hello world!",-1),f={class:"text-center"},h=u(" Element "),m=u(" the viewport ");a();var y=e({setup(n){const s=t(null),a=t(null),e=t(!1);return o(a,(([{isIntersecting:n}])=>{e.value=n}),{root:s}),(n,t)=>{const o=g;return p(),c(l,null,[r("div",{ref:s,class:"root"},[b,r("div",{ref:a,class:"target"},[v],512)],512),r("div",f,[h,r(o,{value:e.value,true:"inside",false:"outside",class:"font-bold"},null,8,["value"]),m])],64)}}});y.__scopeId="data-v-2487947f";const _=d('<h1 id="useintersectionobserver"><a class="header-anchor" href="#useintersectionobserver" aria-hidden="true">#</a> useIntersectionObserver</h1><p>Detects that a target element&#39;s visibility.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>target<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Hello world<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useIntersectionObserver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> targetIsVisible <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> stop <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useIntersectionObserver</span><span class="token punctuation">(</span>\n      target<span class="token punctuation">,</span>\n      <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span><span class="token punctuation">{</span> isIntersecting <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> observerElement</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n        targetIsVisible<span class="token punctuation">.</span>value <span class="token operator">=</span> isIntersecting\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      target<span class="token punctuation">,</span>\n      targetIsVisible<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver" target="_blank" rel="noopener noreferrer">IntersectionObserver MDN</a></p>',6),w=d('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">IntersectionObserverOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableWindow</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * The Element or Document whose bounds are used as the bounding box when testing for intersection.\n   */</span>\n  root<span class="token operator">?</span><span class="token operator">:</span> MaybeElementRef\n  <span class="token comment">/**\n   * A string which specifies a set of offsets to add to the root&#39;s bounding_box when calculating intersections.\n   */</span>\n  rootMargin<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">/**\n   * Either a single number or an array of numbers between 0.0 and 1.\n   */</span>\n  threshold<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Detects that a target element&#39;s visibility.\n *\n * @see /useIntersectionObserver\n * @param target\n * @param callback\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useIntersectionObserver</span><span class="token punctuation">(</span>\n  target<span class="token operator">:</span> MaybeElementRef<span class="token punctuation">,</span>\n  callback<span class="token operator">:</span> IntersectionObserverCallback<span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> IntersectionObserverOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  isSupported<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>\n  <span class="token function-variable function">stop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseIntersectionObserverReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span>\n  <span class="token keyword">typeof</span> useIntersectionObserver\n<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useIntersectionObserver/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useIntersectionObserver/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useIntersectionObserver/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),I='{"title":"useIntersectionObserver","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useIntersectionObserver/index.md","lastUpdated":1626320652926}',O={};const T=Object.assign(O,{setup:function(s){return(s,a)=>{const e=n;return p(),c("div",null,[r(e,null,{default:i((()=>[r(y)])),_:1}),_,k("FOOTER_STARTS"),w,k("FOOTER_ENDS")])}}});export default T;export{I as __pageData};
