import{_ as e}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as a,ai as s,D as n,o as r,c as t,t as o,u as p,s as c,I as u,a as i,w as l,b as d,e as k}from"./app.5f9bb12a.js";const h={lang:"json"};var g=a({setup(e){const a=s("(min-width: 1024px)"),i=s("(prefers-color-scheme: dark)"),l=n((()=>c.dump(u({isLargeScreen:a,prefersDark:i}))));return(e,a)=>(r(),t("pre",h,o(p(l)),1))}});const y=k('<h1 id="usemediaquery"><a class="header-anchor" href="#usemediaquery" aria-hidden="true">#</a> useMediaQuery</h1><p>Reactive <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Media_Queries/Testing_media_queries" target="_blank" rel="noopener noreferrer">Media Query</a>. Once you&#39;ve created a MediaQueryList object, you can check the result of the query or receive notifications when the result changes.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useMediaQuery <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> isLargeScreen <span class="token operator">=</span> <span class="token function">useMediaQuery</span><span class="token punctuation">(</span><span class="token string">&#39;(min-width: 1024px)&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> isPreferredDark <span class="token operator">=</span> <span class="token function">useMediaQuery</span><span class="token punctuation">(</span><span class="token string">&#39;(prefers-color-scheme: dark)&#39;</span><span class="token punctuation">)</span>\n</code></pre></div>',4),_=k('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token comment">/**\n * Reactive Media Query.\n *\n * @see /useMediaQuery\n * @param query\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useMediaQuery</span><span class="token punctuation">(</span>\n  query<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> ConfigurableWindow\n<span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaQuery/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaQuery/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaQuery/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),f='{"title":"useMediaQuery","description":"","frontmatter":"category Browser","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useMediaQuery/index.md","lastUpdated":1626320652926}',m={};const v=Object.assign(m,{setup:function(a){return(a,s)=>{const n=e;return r(),t("div",null,[i(n,null,{default:l((()=>[i(g)])),_:1}),y,d("FOOTER_STARTS"),_,d("FOOTER_ENDS")])}}});export default v;export{f as __pageData};
