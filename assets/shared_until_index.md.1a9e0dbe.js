import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as s,a8 as a,b2 as t,o,c as p,a as e,w as c,t as l,u,F as r,b3 as k,d as i,b as d,e as f}from"./app.5f9bb12a.js";import{_ as h}from"./Note.4d65cb61.js";const m=i("Add to 7 to show the alert.");var g=s({setup(n){const{count:s,inc:i,dec:d}=a();return t((async()=>{await k(s).toBe(7),alert("You got 7!")})),(n,a)=>{const t=h;return o(),p(r,null,[e(t,null,{default:c((()=>[m])),_:1}),e("p",null,"Count: "+l(u(s)),1),e("button",{onClick:a[1]||(a[1]=n=>u(i)())}," Increment "),e("button",{onClick:a[2]||(a[2]=n=>u(d)())}," Decrement ")],64)}}});const y=f('<h1 id="until"><a class="header-anchor" href="#until" aria-hidden="true">#</a> until</h1><p>Promised one-time watch for changes</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><h4 id="wait-for-some-async-data-to-be-ready"><a class="header-anchor" href="#wait-for-some-async-data-to-be-ready" aria-hidden="true">#</a> Wait for some async data to be ready</h4><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> until<span class="token punctuation">,</span> useAsyncState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> state<span class="token punctuation">,</span> ready <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useAsyncState</span><span class="token punctuation">(</span>\n  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;https://jsonplaceholder.typicode.com/todos/1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">t</span> <span class="token operator">=&gt;</span> t<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\n\n<span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ready<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token comment">// state is now ready!</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><h4 id="wait-for-custom-conditions"><a class="header-anchor" href="#wait-for-custom-conditions" aria-hidden="true">#</a> Wait for custom conditions</h4><blockquote><p>You can use <code>invoke</code> to call the async function.</p></blockquote><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> until<span class="token punctuation">,</span> useCounter<span class="token punctuation">,</span> invoke <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> count <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useCounter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">async</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatch</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=&gt;</span> v <span class="token operator">&gt;</span> <span class="token number">7</span><span class="token punctuation">)</span>\n\n  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;Counter is now larger than 7!&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h4 id="timeout"><a class="header-anchor" href="#timeout" aria-hidden="true">#</a> Timeout</h4><div class="language-ts"><pre><code><span class="token comment">// will be resolve until ref.value === true or 1000ms passed</span>\n<span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> timeout<span class="token operator">:</span> <span class="token number">1000</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// will throw if timeout</span>\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n  <span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> timeout<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span> throwOnTimeout<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token comment">// ref.value === true</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// timeout</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h4 id="more-examples"><a class="header-anchor" href="#more-examples" aria-hidden="true">#</a> More Examples</h4><div class="language-ts"><pre><code><span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBe</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatch</span><span class="token punctuation">(</span>v <span class="token operator">=&gt;</span> v <span class="token operator">&gt;</span> <span class="token number">10</span> <span class="token operator">&amp;&amp;</span> v <span class="token operator">&lt;</span> <span class="token number">100</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">changed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">changedTimes</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toBeNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n<span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBeNull</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">await</span> <span class="token function">until</span><span class="token punctuation">(</span>ref<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toBeTruthy</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div>',12),w=f('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UntilToMatchOptions</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Milliseconds timeout for promise to resolve/reject if the when condition does not meet.\n   * 0 for never timed out\n   *\n   * @default 0\n   */</span>\n  timeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token comment">/**\n   * Reject the promise when timeout\n   *\n   * @default false\n   */</span>\n  throwOnTimeout<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * `flush` option for internal watch\n   *\n   * @default &#39;sync&#39;\n   */</span>\n  flush<span class="token operator">?</span><span class="token operator">:</span> WatchOptions<span class="token punctuation">[</span><span class="token string">&quot;flush&quot;</span><span class="token punctuation">]</span>\n  <span class="token comment">/**\n   * `deep` option for internal watch\n   *\n   * @default &#39;false&#39;\n   */</span>\n  deep<span class="token operator">?</span><span class="token operator">:</span> WatchOptions<span class="token punctuation">[</span><span class="token string">&quot;deep&quot;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UntilBaseInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token function">toMatch</span><span class="token punctuation">(</span>\n    <span class="token function-variable function">condition</span><span class="token operator">:</span> <span class="token punctuation">(</span>v<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">,</span>\n    options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions\n  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n  <span class="token function">changed</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n  <span class="token function">changedTimes</span><span class="token punctuation">(</span>n<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UntilValueInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">UntilBaseInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> not<span class="token operator">:</span> UntilValueInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>\n  <span class="token generic-function"><span class="token function">toBe</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">P</span> <span class="token operator">=</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n    value<span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token operator">|</span> <span class="token constant">P</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n    options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions\n  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n  <span class="token function">toBeTruthy</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n  <span class="token function">toBeNull</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n  <span class="token function">toBeUndefined</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n  <span class="token function">toBeNaN</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UntilArrayInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token keyword">extends</span> <span class="token class-name">UntilBaseInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> not<span class="token operator">:</span> UntilArrayInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>\n  <span class="token function">toContains</span><span class="token punctuation">(</span>\n    value<span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>ElementOf<span class="token operator">&lt;</span>ShallowUnwrapRef<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;&gt;&gt;</span><span class="token punctuation">,</span>\n    options<span class="token operator">?</span><span class="token operator">:</span> UntilToMatchOptions\n  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Promised one-time watch for changes\n *\n * @see /until\n * @example\n * ```\n * const { count } = useCounter()\n *\n * await until(count).toMatch(v =&gt; v &gt; 7)\n *\n * alert(&#39;Counter is now larger than 7!&#39;)\n * ```\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">until</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> <span class="token builtin">unknown</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  r<span class="token operator">:</span> WatchSource<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> MaybeRef<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> UntilArrayInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">until</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  r<span class="token operator">:</span> WatchSource<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span> <span class="token operator">|</span> MaybeRef<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> UntilValueInstance<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/until/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/until/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/until/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),b='{"title":"until","description":"","frontmatter":"category Watch","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"shared/until/index.md","lastUpdated":1626320652938}',v={};const T=Object.assign(v,{setup:function(s){return(s,a)=>{const t=n;return o(),p("div",null,[e(t,null,{default:c((()=>[e(g)])),_:1}),y,d("FOOTER_STARTS"),w,d("FOOTER_ENDS")])}}});export default T;export{b as __pageData};
