import{_ as s}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{_ as n}from"./LearnMoreComponents.ac2616c2.js";import{f as a,r as e,Q as t,D as o,I as p,ak as c,o as l,c as r,a as u,t as i,u as k,ah as d,d as g,w as h,b as m,e as v}from"./app.5f9bb12a.js";import{s as b}from"./utils.8fd68d5f.js";const f={lang:"yaml"},y=g(" Tracking on ");var w=a({setup(s){const n=e(null),[a,g]=t(),h=o((()=>a.value?n.value:window)),m=p(c({target:h})),v=b(m);return(s,e)=>(l(),r("div",{ref:n,class:"select-none"},[u("pre",f,i(k(v)),1),u("div",null,[y,u("button",{class:"ml-2 button small",onClick:e[1]||(e[1]=(...s)=>k(g)&&k(g)(...s))},i(k(a)?"Demo section":"Entire page"),1)]),u("div",{class:"h-40 w-40 bg-green-200 p-3 flex flex-row items-center text-center",onDrop:e[2]||(e[2]=d((()=>{}),["prevent"]))}," Drop something here to try drag and drop. ",32)],512))}});const _=v('<h1 id="usemousepressed"><a class="header-anchor" href="#usemousepressed" aria-hidden="true">#</a> useMousePressed</h1><p>Reactive mouse pressing state. Triggered by <code>mousedown</code> <code>touchstart</code> on target element and released by <code>mouseup</code> <code>mouseleave</code> <code>touchend</code> <code>touchcancel</code> on window.</p><h2 id="basic-usage"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useMousePressed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> pressed <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMousePressed</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre></div><p>Touching is enabled by default. To make it only detects mouse changes, set <code>touch</code> to <code>false</code></p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> pressed <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMousePressed</span><span class="token punctuation">(</span><span class="token punctuation">{</span> touch<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>To only capture <code>mousedown</code> and <code>touchstart</code> on specific element, you can specify <code>target</code> by passing a ref of the element.</p><div class="language-html"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><br><br><br><br></div><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    Only clicking on this element will trigger the update.\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useMousePressed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> pressed <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMousePressed</span><span class="token punctuation">(</span><span class="token punctuation">{</span> target<span class="token operator">:</span> el <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">,</span>\n      pressed<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="component"><a class="header-anchor" href="#component" aria-hidden="true">#</a> Component</h2><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>UseMousePressed</span> <span class="token attr-name">v-slot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ pressed }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  Is Pressed: {{ pressed }}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>UseMousePressed</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',10),T=v('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">MousePressedOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableWindow</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Listen to `touchstart` `touchend` events\n   *\n   * @default true\n   */</span>\n  touch<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Listen to `dragstart` `drop` and `dragend` events\n   *\n   * @default true\n   */</span>\n  drag<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Initial values\n   *\n   * @default false\n   */</span>\n  initialValue<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Element target to be capture the click\n   */</span>\n  target<span class="token operator">?</span><span class="token operator">:</span> MaybeElementRef\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Reactive mouse position.\n *\n * @see /useMousePressed\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useMousePressed</span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> MousePressedOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  pressed<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  sourceType<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>MouseSourceType<span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseMousePressedReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> useMousePressed<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMousePressed/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMousePressed/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMousePressed/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),P='{"title":"useMousePressed","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Basic Usage","slug":"basic-usage"},{"level":2,"title":"Component","slug":"component"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useMousePressed/index.md","lastUpdated":1626320652926}',M={};const S=Object.assign(M,{setup:function(a){return(a,e)=>{const t=s,o=n;return l(),r("div",null,[u(t,null,{default:h((()=>[u(w)])),_:1}),_,u(o),m("FOOTER_STARTS"),T,m("FOOTER_ENDS")])}}});export default S;export{P as __pageData};
