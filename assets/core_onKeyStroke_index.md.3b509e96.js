import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{x as a,y as s,f as e,r as t,A as o,o as p,c,a as r,w as l,b as k,e as u}from"./app.5f9bb12a.js";a("data-v-35b2c6e1");const i={class:"container"},d=r("div",{class:"text-center mt-4"}," Use the arrow keys to control the movement of the ball. ",-1);s();var y=e({setup(n){const a=t(0),s=t(0);return o("ArrowUp",(n=>{s.value-=10,n.preventDefault()})),o("ArrowDown",(n=>{s.value+=10,n.preventDefault()})),o("ArrowLeft",(n=>{a.value-=10,n.preventDefault()})),o("ArrowRight",(n=>{a.value+=10,n.preventDefault()})),(n,e)=>(p(),c("div",null,[r("div",i,[r("div",{class:"ball",style:{transform:`translate(${a.value}px, ${s.value}px)`}},null,4)]),d]))}});y.__scopeId="data-v-35b2c6e1";const v=u('<h1 id="onkeystroke"><a class="header-anchor" href="#onkeystroke" aria-hidden="true">#</a> onKeyStroke</h1><p>Listen for keyboard key being stroked.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> onKeyStroke <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token function">onKeyStroke</span><span class="token punctuation">(</span><span class="token string">&#39;ArrowDown&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>See <a href="https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values" target="_blank" rel="noopener noreferrer">this table</a> for all key codes.</p><h3 id="custom-event-target"><a class="header-anchor" href="#custom-event-target" aria-hidden="true">#</a> Custom Event Target</h3><div class="language-js"><pre><code><span class="token function">onKeyStroke</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Key A pressed on document&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> target<span class="token operator">:</span> document <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="custom-keyboard-event"><a class="header-anchor" href="#custom-keyboard-event" aria-hidden="true">#</a> Custom Keyboard Event</h3><div class="language-js"><pre><code><span class="token function">onKeyStroke</span><span class="token punctuation">(</span><span class="token string">&#39;Shift&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Shift key up&#39;</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> eventName<span class="token operator">:</span> <span class="token string">&#39;keyup&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>Or</p><div class="language-js"><pre><code><span class="token function">onKeyUp</span><span class="token punctuation">(</span><span class="token string">&#39;Shift&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Shift key up&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="alias"><a class="header-anchor" href="#alias" aria-hidden="true">#</a> Alias</h2><ul><li><code>onKeyDown</code> - alias for <code>onKeyStroke(key, handler, {eventName: &#39;keydown&#39;})</code></li><li><code>onKeyPressed</code> - alias for <code>onKeyStroke(key, handler, {eventName: &#39;keypress&#39;})</code></li><li><code>onKeyUp</code> - alias for <code>onKeyStroke(key, handler, {eventName: &#39;keyup&#39;})</code></li></ul>',13),g=u('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">KeyPredicate</span> <span class="token operator">=</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">KeyFilter</span> <span class="token operator">=</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> KeyPredicate\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">KeyStrokeEventName</span> <span class="token operator">=</span> <span class="token string">&quot;keydown&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;keypress&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;keyup&quot;</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">KeyStrokeOptions</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  eventName<span class="token operator">?</span><span class="token operator">:</span> KeyStrokeEventName\n  target<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>EventTarget<span class="token operator">&gt;</span>\n  passive<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Listen for keyboard keys being stroked.\n *\n * @see /onKeyStroke\n * @param key\n * @param handler\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">onKeyStroke</span><span class="token punctuation">(</span>\n  key<span class="token operator">:</span> KeyFilter<span class="token punctuation">,</span>\n  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> KeyStrokeOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> Fn\n<span class="token comment">/**\n * Listen to the keydown event of the given key.\n *\n * @see /onKeyStroke\n * @param key\n * @param handler\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">onKeyDown</span><span class="token punctuation">(</span>\n  key<span class="token operator">:</span> KeyFilter<span class="token punctuation">,</span>\n  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> Omit<span class="token operator">&lt;</span>KeyStrokeOptions<span class="token punctuation">,</span> <span class="token string">&quot;eventName&quot;</span><span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> Fn\n<span class="token comment">/**\n * Listen to the keypress event of the given key.\n *\n * @see /onKeyStroke\n * @param key\n * @param handler\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">onKeyPressed</span><span class="token punctuation">(</span>\n  key<span class="token operator">:</span> KeyFilter<span class="token punctuation">,</span>\n  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> Omit<span class="token operator">&lt;</span>KeyStrokeOptions<span class="token punctuation">,</span> <span class="token string">&quot;eventName&quot;</span><span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> Fn\n<span class="token comment">/**\n * Listen to the keyup event of the given key.\n *\n * @see /onKeyStroke\n * @param key\n * @param handler\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">onKeyUp</span><span class="token punctuation">(</span>\n  key<span class="token operator">:</span> KeyFilter<span class="token punctuation">,</span>\n  <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> KeyboardEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> Omit<span class="token operator">&lt;</span>KeyStrokeOptions<span class="token punctuation">,</span> <span class="token string">&quot;eventName&quot;</span><span class="token operator">&gt;</span>\n<span class="token punctuation">)</span><span class="token operator">:</span> Fn\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/onKeyStroke/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/onKeyStroke/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/onKeyStroke/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),h='{"title":"onKeyStroke","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Custom Event Target","slug":"custom-event-target"},{"level":3,"title":"Custom Keyboard Event","slug":"custom-keyboard-event"},{"level":2,"title":"Alias","slug":"alias"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/onKeyStroke/index.md","lastUpdated":1626320652922}',m={};const f=Object.assign(m,{setup:function(a){return(a,s)=>{const e=n;return p(),c("div",null,[r(e,null,{default:l((()=>[r(y)])),_:1}),v,k("FOOTER_STARTS"),g,k("FOOTER_ENDS")])}}});export default f;export{h as __pageData};
