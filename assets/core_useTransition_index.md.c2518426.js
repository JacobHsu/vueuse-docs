import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{x as s,y as a,f as e,r as t,aF as o,o as p,c,a as r,t as l,u as i,d as u,aG as k,aH as d,w as b,b as m,e as f}from"./app.5f9bb12a.js";s("data-v-7f6c71b0");const h={class:"mt-2"},g=u(" Cubic bezier curve: "),y={class:"track number"},v={class:"relative"},_={class:"mt-2"},w=u(" Custom function: "),T={class:"track number"},z={class:"relative"},O={class:"mt-2"},C=u(" Vector: "),x={class:"track vector"},I={class:"relative"};a();var S=e({setup(n){const s=1500,a=t(0),e=t([0,0]),u=o(a,{duration:s,transition:[.75,0,.25,1]}),b=o(a,{duration:s,transition:n=>0===n?0:1===n?1:2**(-10*n)*Math.sin((10*n-.75)*(2*Math.PI/3))+1}),m=o(e,{duration:s,transition:k.easeOutExpo}),f=()=>{a.value=100===a.value?0:100,e.value=[d(0,100),d(0,100)]};return(n,s)=>(p(),c("div",null,[r("button",{onClick:f}," Transition "),r("p",h,[g,r("b",null,l(i(u).toFixed(2)),1)]),r("div",y,[r("div",v,[r("div",{class:"sled",style:{left:i(u)+"%"}},null,4)])]),r("p",_,[w,r("b",null,l(i(b).toFixed(2)),1)]),r("div",T,[r("div",z,[r("div",{class:"sled",style:{left:i(b)+"%"}},null,4)])]),r("p",O,[C,r("b",null,"["+l(i(m)[0].toFixed(2))+", "+l(i(m)[1].toFixed(2))+"]",1)]),r("div",x,[r("div",I,[r("div",{class:"sled",style:{left:i(m)[0]+"%",top:i(m)[1]+"%"}},null,4)])])]))}});S.__scopeId="data-v-7f6c71b0";const E=f('<h1 id="usetransition"><a class="header-anchor" href="#usetransition" aria-hidden="true">#</a> useTransition</h1><p>Transition between values</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>For simple transitions, provide a numeric source value to watch. When changed, the output will transition to the new value. If the source changes while a transition is in progress, a new transition will begin from where the previous one was interrupted.</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useTransition<span class="token punctuation">,</span> TransitionPresets <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token function">useTransition</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  duration<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>\n  transition<span class="token operator">:</span> TransitionPresets<span class="token punctuation">.</span>easeInOutCubic<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>To synchronize transitions, use an array of numbers. As an example, here is how we could transition between colors.</p><div class="language-js"><pre><code><span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token function">useTransition</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> color <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>r<span class="token punctuation">,</span> g<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> output<span class="token punctuation">.</span>value\n  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">rgb(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>r<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>g<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>b<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>Transition easing can be customized using cubic bezier curves. Transitions defined this way work the same as <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/easing-function#easing_functions" target="_blank" rel="noopener noreferrer">CSS easing functions</a>.</p><div class="language-js"><pre><code><span class="token function">useTransition</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  transition<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0.75</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0.25</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>The following transitions are available via the <code>TransitionPresets</code> constant.</p><ul><li><a href="https://cubic-bezier.com/#0,0,1,1" target="_blank" rel="noopener noreferrer"><code>linear</code></a></li><li><a href="https://cubic-bezier.com/#.12,0,.39,0" target="_blank" rel="noopener noreferrer"><code>easeInSine</code></a></li><li><a href="https://cubic-bezier.com/#.61,1,.88,1" target="_blank" rel="noopener noreferrer"><code>easeOutSine</code></a></li><li><a href="https://cubic-bezier.com/#.37,0,.63,1" target="_blank" rel="noopener noreferrer"><code>easeInOutSine</code></a></li><li><a href="https://cubic-bezier.com/#.11,0,.5,0" target="_blank" rel="noopener noreferrer"><code>easeInQuad</code></a></li><li><a href="https://cubic-bezier.com/#.5,1,.89,1" target="_blank" rel="noopener noreferrer"><code>easeOutQuad</code></a></li><li><a href="https://cubic-bezier.com/#.45,0,.55,1" target="_blank" rel="noopener noreferrer"><code>easeInOutQuad</code></a></li><li><a href="https://cubic-bezier.com/#.32,0,.67,0" target="_blank" rel="noopener noreferrer"><code>easeInCubic</code></a></li><li><a href="https://cubic-bezier.com/#.33,1,.68,1" target="_blank" rel="noopener noreferrer"><code>easeOutCubic</code></a></li><li><a href="https://cubic-bezier.com/#.65,0,.35,1" target="_blank" rel="noopener noreferrer"><code>easeInOutCubic</code></a></li><li><a href="https://cubic-bezier.com/#.5,0,.75,0" target="_blank" rel="noopener noreferrer"><code>easeInQuart</code></a></li><li><a href="https://cubic-bezier.com/#.25,1,.5,1" target="_blank" rel="noopener noreferrer"><code>easeOutQuart</code></a></li><li><a href="https://cubic-bezier.com/#.76,0,.24,1" target="_blank" rel="noopener noreferrer"><code>easeInOutQuart</code></a></li><li><a href="https://cubic-bezier.com/#.64,0,.78,0" target="_blank" rel="noopener noreferrer"><code>easeInQuint</code></a></li><li><a href="https://cubic-bezier.com/#.22,1,.36,1" target="_blank" rel="noopener noreferrer"><code>easeOutQuint</code></a></li><li><a href="https://cubic-bezier.com/#.83,0,.17,1" target="_blank" rel="noopener noreferrer"><code>easeInOutQuint</code></a></li><li><a href="https://cubic-bezier.com/#.7,0,.84,0" target="_blank" rel="noopener noreferrer"><code>easeInExpo</code></a></li><li><a href="https://cubic-bezier.com/#.16,1,.3,1" target="_blank" rel="noopener noreferrer"><code>easeOutExpo</code></a></li><li><a href="https://cubic-bezier.com/#.87,0,.13,1" target="_blank" rel="noopener noreferrer"><code>easeInOutExpo</code></a></li><li><a href="https://cubic-bezier.com/#.55,0,1,.45" target="_blank" rel="noopener noreferrer"><code>easeInCirc</code></a></li><li><a href="https://cubic-bezier.com/#0,.55,.45,1" target="_blank" rel="noopener noreferrer"><code>easeOutCirc</code></a></li><li><a href="https://cubic-bezier.com/#.85,0,.15,1" target="_blank" rel="noopener noreferrer"><code>easeInOutCirc</code></a></li><li><a href="https://cubic-bezier.com/#.36,0,.66,-.56" target="_blank" rel="noopener noreferrer"><code>easeInBack</code></a></li><li><a href="https://cubic-bezier.com/#.34,1.56,.64,1" target="_blank" rel="noopener noreferrer"><code>easeOutBack</code></a></li><li><a href="https://cubic-bezier.com/#.68,-.6,.32,1.6" target="_blank" rel="noopener noreferrer"><code>easeInOutBack</code></a></li></ul><p>For more complex transitions, a custom function can be provided.</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token function-variable function">easeOutElastic</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> n <span class="token operator">===</span> <span class="token number">0</span>\n    <span class="token operator">?</span> <span class="token number">0</span>\n    <span class="token operator">:</span> n <span class="token operator">===</span> <span class="token number">1</span>\n      <span class="token operator">?</span> <span class="token number">1</span>\n      <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span> <span class="token operator">*</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token function">sin</span><span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">*</span> <span class="token number">10</span> <span class="token operator">-</span> <span class="token number">0.75</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> Math<span class="token punctuation">.</span><span class="token constant">PI</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">useTransition</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  transition<span class="token operator">:</span> easeOutElastic<span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>To control when a transition starts, set a <code>delay</code> value. To choreograph behavior around a transition, define <code>onStarted</code> or <code>onFinished</code> callbacks.</p><div class="language-js"><pre><code><span class="token function">useTransition</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> <span class="token punctuation">{</span>\n  delay<span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>\n  <span class="token function">onStarted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// called after the transition starts</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token function">onFinished</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// called after the transition ends</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre></div><p>To temporarily stop transitioning, define a boolean <code>disabled</code> property. Be aware, this is not the same a <code>duration</code> of <code>0</code>. Disabled transitions track the source value <strong><em>synchronously</em></strong>. They do not respect a <code>delay</code>, and do not fire <code>onStarted</code> or <code>onFinished</code> callbacks.</p>',16),F=f('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token comment">/**\n * Cubic bezier points\n */</span>\n<span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">CubicBezierPoints</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span>\n<span class="token comment">/**\n * Easing function\n */</span>\n<span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">EasingFunction</span> <span class="token operator">=</span> <span class="token punctuation">(</span>n<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">number</span>\n<span class="token comment">/**\n * Transition options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">TransitionOptions</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Milliseconds to wait before starting transition\n   */</span>\n  delay<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  <span class="token comment">/**\n   * Disables the transition\n   */</span>\n  disabled<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  <span class="token comment">/**\n   * Transition duration in milliseconds\n   */</span>\n  duration<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  <span class="token comment">/**\n   * Callback to execute after transition finishes\n   */</span>\n  onFinished<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">/**\n   * Callback to execute after transition starts\n   */</span>\n  onStarted<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">/**\n   * Easing function or cubic bezier points for calculating transition values\n   */</span>\n  transition<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>EasingFunction <span class="token operator">|</span> CubicBezierPoints<span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Common transitions\n *\n * @see https://easings.net\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">const</span> TransitionPresets<span class="token operator">:</span> Record<span class="token operator">&lt;</span>\n  <span class="token builtin">string</span><span class="token punctuation">,</span>\n  CubicBezierPoints <span class="token operator">|</span> EasingFunction\n<span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useTransition</span><span class="token punctuation">(</span>\n  source<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> TransitionOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useTransition</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> MaybeRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>\n  source<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token constant">T</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> TransitionOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span>\n  <span class="token punctuation">{</span>\n    <span class="token punctuation">[</span><span class="token constant">K</span> <span class="token keyword">in</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token punctuation">}</span>\n<span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useTransition</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span> <span class="token keyword">extends</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>\n  source<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> TransitionOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useTransition/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),R='{"title":"useTransition","description":"","frontmatter":"category Animation","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useTransition/index.md","lastUpdated":1626320652930}',P={};const D=Object.assign(P,{setup:function(s){return(s,a)=>{const e=n;return p(),c("div",null,[r(e,null,{default:b((()=>[r(S)])),_:1}),E,m("FOOTER_STARTS"),F,m("FOOTER_ENDS")])}}});export default D;export{R as __pageData};
