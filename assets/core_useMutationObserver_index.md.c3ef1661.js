import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as s,r as a,al as e,o as t,c as o,a as p,F as c,E as r,t as u,w as l,b as i,e as k}from"./app.5f9bb12a.js";var d=s({setup(n){const s=a(null),l=a([]),i=a({}),k=a({});return e(s,(n=>{const s=n[0];s&&l.value.push(s.attributeName)}),{attributes:!0}),setTimeout((()=>{i.value={test:!0,test2:!0}}),1e3),setTimeout((()=>{k.value={color:"red"}}),1550),(n,a)=>(t(),o("div",null,[p("div",{ref:s,class:i.value,style:k.value},[(t(!0),o(c,null,r(l.value,((n,s)=>(t(),o("div",{key:s}," Mutation Attribute: "+u(n),1)))),128))],6)]))}});const b=k('<h1 id="usemutationobserver"><a class="header-anchor" href="#usemutationobserver" aria-hidden="true">#</a> useMutationObserver</h1><p>Watch for changes being made to the DOM tree. <a href="https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver" target="_blank" rel="noopener noreferrer">MutationObserver MDN</a></p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useMutationObserver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> messages <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n  \n    <span class="token function">useMutationObserver</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token punctuation">(</span>mutations<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>mutations<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n        messages<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>mutations<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>attributeName<span class="token punctuation">)</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>\n      attributes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">,</span>\n      messages<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n</code></pre></div>',4),v=k('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">MutationObserverOptions</span>\n  <span class="token keyword">extends</span> <span class="token class-name">MutationObserverInit</span><span class="token punctuation">,</span>\n    ConfigurableWindow <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token comment">/**\n * Watch for changes being made to the DOM tree.\n *\n * @see /useMutationObserver\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver MutationObserver MDN\n * @param target\n * @param callback\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useMutationObserver</span><span class="token punctuation">(</span>\n  target<span class="token operator">:</span> MaybeElementRef<span class="token punctuation">,</span>\n  callback<span class="token operator">:</span> MutationCallback<span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> MutationObserverOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  isSupported<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>\n  <span class="token function-variable function">stop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseMutationObserverReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span>\n  <span class="token keyword">typeof</span> useMutationObserver\n<span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMutationObserver/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMutationObserver/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMutationObserver/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),m='{"title":"useMutationObserver","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useMutationObserver/index.md","lastUpdated":1626320652926}',h={};const f=Object.assign(h,{setup:function(s){return(s,a)=>{const e=n;return t(),o("div",null,[p(e,null,{default:l((()=>[p(d)])),_:1}),b,i("FOOTER_STARTS"),v,i("FOOTER_ENDS")])}}});export default f;export{m as __pageData};
