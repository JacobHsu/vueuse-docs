import{_ as s}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as n,r as a,ax as e,o as t,c as p,a as o,w as r,t as c,F as l,d as i,b as k,e as u}from"./app.5f9bb12a.js";import{_ as d}from"./Note.4d65cb61.js";const b=i(" Resize the box to see changes ");var g=n({setup(s){const n=a(null),i=a("");return e(n,(s=>{const[n]=s,{width:a,height:e}=n.contentRect;i.value=`width: ${a}\nheight: ${e}`})),(s,a)=>{const e=d;return t(),p(l,null,[o(e,{class:"mb-2"},{default:r((()=>[b])),_:1}),o("textarea",{ref:n,class:"resizer",disabled:"",textContent:c(i.value)},null,8,["textContent"])],64)}}});const h=u('<h1 id="useresizeobserver"><a class="header-anchor" href="#useresizeobserver" aria-hidden="true">#</a> useResizeObserver</h1><p>Reports changes to the dimensions of an Element&#39;s content or the border-box</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-html"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><div class="highlighted"> </div><br><br><br><br><br><br><br><br><br></div><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    {{text}}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useResizeObserver <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>\n\n    <span class="token function">useResizeObserver</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">entries</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n      <span class="token keyword">const</span> entry <span class="token operator">=</span> entries<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n      <span class="token keyword">const</span> <span class="token punctuation">{</span> width<span class="token punctuation">,</span> height <span class="token punctuation">}</span> <span class="token operator">=</span> entry<span class="token punctuation">.</span>contentRect\n      text<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">width: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>width<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">, height: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>height<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      el<span class="token punctuation">,</span>\n      text<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><p><a href="https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver" target="_blank" rel="noopener noreferrer">ResizeObserver MDN</a></p>',5),v=u('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ResizeObserverSize</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> inlineSize<span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token keyword">readonly</span> blockSize<span class="token operator">:</span> <span class="token builtin">number</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ResizeObserverEntry</span> <span class="token punctuation">{</span>\n  <span class="token keyword">readonly</span> target<span class="token operator">:</span> Element\n  <span class="token keyword">readonly</span> contentRect<span class="token operator">:</span> DOMRectReadOnly\n  <span class="token keyword">readonly</span> borderBoxSize<span class="token operator">?</span><span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ResizeObserverSize<span class="token operator">&gt;</span>\n  <span class="token keyword">readonly</span> contentBoxSize<span class="token operator">?</span><span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ResizeObserverSize<span class="token operator">&gt;</span>\n  <span class="token keyword">readonly</span> devicePixelContentBoxSize<span class="token operator">?</span><span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ResizeObserverSize<span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">ResizeObserverCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span>\n  entries<span class="token operator">:</span> ReadonlyArray<span class="token operator">&lt;</span>ResizeObserverEntry<span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  observer<span class="token operator">:</span> ResizeObserver\n<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ResizeObserverOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableWindow</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Sets which box model the observer will observe changes to. Possible values\n   * are `content-box` (the default), and `border-box`.\n   *\n   * @default &#39;content-box&#39;\n   */</span>\n  box<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&quot;content-box&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;border-box&quot;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">declare</span> <span class="token keyword">class</span> <span class="token class-name">ResizeObserver</span> <span class="token punctuation">{</span>\n  <span class="token function">constructor</span><span class="token punctuation">(</span>callback<span class="token operator">:</span> ResizeObserverCallback<span class="token punctuation">)</span>\n  <span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n  <span class="token function">observe</span><span class="token punctuation">(</span>target<span class="token operator">:</span> Element<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> ResizeObserverOptions<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n  <span class="token function">unobserve</span><span class="token punctuation">(</span>target<span class="token operator">:</span> Element<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Reports changes to the dimensions of an Element&#39;s content or the border-box\n *\n * @see /useResizeObserver\n * @param target\n * @param callback\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useResizeObserver</span><span class="token punctuation">(</span>\n  target<span class="token operator">:</span> MaybeElementRef<span class="token punctuation">,</span>\n  callback<span class="token operator">:</span> ResizeObserverCallback<span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> ResizeObserverOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  isSupported<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>\n  <span class="token function-variable function">stop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseResizeObserverReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span>\n  <span class="token keyword">typeof</span> useResizeObserver\n<span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useResizeObserver/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useResizeObserver/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useResizeObserver/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),y='{"title":"useResizeObserver","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useResizeObserver/index.md","lastUpdated":1626320652930}',m={};const f=Object.assign(m,{setup:function(n){return(n,a)=>{const e=s;return t(),p("div",null,[o(e,null,{default:r((()=>[o(g)])),_:1}),h,k("FOOTER_STARTS"),v,k("FOOTER_ENDS")])}}});export default f;export{y as __pageData};
