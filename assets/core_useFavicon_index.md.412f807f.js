import{_ as s}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{f as n,r as a,D as e,a0 as o,o as t,c as p,a as c,F as r,w as l,b as i,e as u}from"./app.5f9bb12a.js";const k=c("div",null," Change favicon to ",-1);var d=n({setup(s){const n=a("vueuse"),l=e((()=>"vue"===n.value?"vue.png":"favicon-32x32.png"));return o(l,{baseUrl:"/",rel:"icon"}),(s,a)=>(t(),p(r,null,[k,c("button",{onClick:a[1]||(a[1]=s=>n.value="vue")}," Vue "),c("button",{onClick:a[2]||(a[2]=s=>n.value="vueuse")}," VueUse ")],64))}});const v=u('<h1 id="usefavicon"><a class="header-anchor" href="#usefavicon" aria-hidden="true">#</a> useFavicon</h1><p>Reactive favicon</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-js"><div class="highlight-lines"><br><br><div class="highlighted"> </div><br><br><br></div><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useFavicon <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> icon <span class="token operator">=</span> <span class="token function">useFavicon</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\nicon<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;dark.png&#39;</span> <span class="token comment">// change current icon</span>\n</code></pre></div><h3 id="passing-a-source-ref"><a class="header-anchor" href="#passing-a-source-ref" aria-hidden="true">#</a> Passing a source ref</h3><p>You can pass a <code>ref</code> to it, changes from of the source ref will be reflected to your favicon automatically.</p><div class="language-js"><div class="highlight-lines"><br><br><br><br><br><br><div class="highlighted"> </div><br></div><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> computed <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useFavicon<span class="token punctuation">,</span> usePreferredDark <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> isDark <span class="token operator">=</span> <span class="token function">usePreferredDark</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> favicon <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> isDark<span class="token punctuation">.</span>value <span class="token operator">?</span> <span class="token string">&#39;dark.png&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;light.png&#39;</span><span class="token punctuation">)</span>\n\n<span class="token function">useFavicon</span><span class="token punctuation">(</span>favicon<span class="token punctuation">)</span>\n</code></pre></div><p>When a source ref is passed, the return ref will be identical to the source ref</p><div class="language-ts"><pre><code><span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;icon.png&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> icon <span class="token operator">=</span> <span class="token function">useFavicon</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span>\n\n<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>icon <span class="token operator">===</span> source<span class="token punctuation">)</span> <span class="token comment">// true</span>\n</code></pre></div>',9),g=u('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">FaviconOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableDocument</span> <span class="token punctuation">{</span>\n  baseUrl<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  rel<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Reactive favicon.\n *\n * @see /useFavicon\n * @param newIcon\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useFavicon</span><span class="token punctuation">(</span>\n  newIcon<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> FaviconOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useFavicon/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useFavicon/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useFavicon/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),f='{"title":"useFavicon","description":"","frontmatter":"category Browser","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Passing a source ref","slug":"passing-a-source-ref"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useFavicon/index.md","lastUpdated":1626320652926}',h={};const b=Object.assign(h,{setup:function(n){return(n,a)=>{const e=s;return t(),p("div",null,[c(e,null,{default:l((()=>[c(d)])),_:1}),v,i("FOOTER_STARTS"),g,i("FOOTER_ENDS")])}}});export default b;export{f as __pageData};
