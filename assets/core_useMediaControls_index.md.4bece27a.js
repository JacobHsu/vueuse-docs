import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{o as s,c as a,a as t,f as p,r as o,ab as e,ac as c,ad as l,Y as r,u as k,i as u,z as i,ae as d,I as b,D as v,af as g,b as m,ag as y,w as f,t as h,F as w,ah as x,E as T,e as C}from"./app.5f9bb12a.js";import{_ as M}from"./checkmark.86d45fcb.js";import{s as E}from"./utils.8fd68d5f.js";const L={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 32 32"},_=t("path",{d:"M7 28a1 1 0 0 1-1-1V5a1 1 0 0 1 1.482-.876l20 11a1 1 0 0 1 0 1.752l-20 11A1 1 0 0 1 7 28zM8 6.69V25.31L24.925 16z",fill:"currentColor"},null,-1);var O={name:"carbon-play",render:function(n,t){return s(),a("svg",L,[_])}};const I={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 32 32"},S=t("path",{d:"M12 8v16H8V8h4m0-2H8a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2z",fill:"currentColor"},null,-1),K=t("path",{d:"M24 8v16h-4V8h4m0-2h-4a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h4a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2z",fill:"currentColor"},null,-1);var R={name:"carbon-pause",render:function(n,t){return s(),a("svg",I,[S,K])}};const A={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 32 32"},q=t("path",{d:"M31 12.41L29.59 11L26 14.59L22.41 11L21 12.41L24.59 16L21 19.59L22.41 21L26 17.41L29.59 21L31 19.59L27.41 16L31 12.41z",fill:"currentColor"},null,-1),V=t("path",{d:"M18 30a1 1 0 0 1-.71-.3L9.67 22H3a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h6.67l7.62-7.7a1 1 0 0 1 1.41 0a1 1 0 0 1 .3.7v26a1 1 0 0 1-1 1zM4 20h6a1.17 1.17 0 0 1 .79.3L17 26.57V5.43l-6.21 6.27a1.17 1.17 0 0 1-.79.3H4z",fill:"currentColor"},null,-1);var z={name:"carbon-volume-mute",render:function(n,t){return s(),a("svg",A,[q,V])}};const P={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 32 32"},U=t("path",{d:"M27.16 8.08l-1.53 1.29a10 10 0 0 1-.29 13.23l1.47 1.4a12 12 0 0 0 .35-15.88z",fill:"currentColor"},null,-1),j=t("path",{d:"M21.58 12a6 6 0 0 1-.18 7.94l1.47 1.36a8 8 0 0 0 .23-10.59z",fill:"currentColor"},null,-1),H=t("path",{d:"M18 30a1 1 0 0 1-.71-.3L9.67 22H3a1 1 0 0 1-1-1V11a1 1 0 0 1 1-1h6.67l7.62-7.7a1 1 0 0 1 1.41 0a1 1 0 0 1 .3.7v26a1 1 0 0 1-1 1zM4 20h6.08a1 1 0 0 1 .71.3L17 26.57V5.43l-6.21 6.27a1 1 0 0 1-.71.3H4z",fill:"currentColor"},null,-1);var B={name:"carbon-volume-up",render:function(n,t){return s(),a("svg",P,[U,j,H])}};const D={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 32 32"},Y=t("path",{d:"M15 21h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2h-5v6h5z",fill:"currentColor"},null,-1),N=t("path",{d:"M25 21h-5a2 2 0 0 1-2-2v-6a2 2 0 0 1 2-2h5v2h-5v6h5z",fill:"currentColor"},null,-1),$=t("path",{d:"M28 26H4a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h24a2 2 0 0 1 2 2v16a2 2 0 0 1-2 2zM4 8v16h24V8z",fill:"currentColor"},null,-1);var F={name:"carbon-closed-caption",render:function(n,t){return s(),a("svg",D,[Y,N,$])}};const X={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 32 32"},W=t("path",{d:"M27 16.76V16v-.77l1.92-1.68A2 2 0 0 0 29.3 11l-2.36-4a2 2 0 0 0-1.73-1a2 2 0 0 0-.64.1l-2.43.82a11.35 11.35 0 0 0-1.31-.75l-.51-2.52a2 2 0 0 0-2-1.61h-4.68a2 2 0 0 0-2 1.61l-.51 2.52a11.48 11.48 0 0 0-1.32.75l-2.38-.86A2 2 0 0 0 6.79 6a2 2 0 0 0-1.73 1L2.7 11a2 2 0 0 0 .41 2.51L5 15.24v1.53l-1.89 1.68A2 2 0 0 0 2.7 21l2.36 4a2 2 0 0 0 1.73 1a2 2 0 0 0 .64-.1l2.43-.82a11.35 11.35 0 0 0 1.31.75l.51 2.52a2 2 0 0 0 2 1.61h4.72a2 2 0 0 0 2-1.61l.51-2.52a11.48 11.48 0 0 0 1.32-.75l2.42.82a2 2 0 0 0 .64.1a2 2 0 0 0 1.73-1l2.28-4a2 2 0 0 0-.41-2.51zM25.21 24l-3.43-1.16a8.86 8.86 0 0 1-2.71 1.57L18.36 28h-4.72l-.71-3.55a9.36 9.36 0 0 1-2.7-1.57L6.79 24l-2.36-4l2.72-2.4a8.9 8.9 0 0 1 0-3.13L4.43 12l2.36-4l3.43 1.16a8.86 8.86 0 0 1 2.71-1.57L13.64 4h4.72l.71 3.55a9.36 9.36 0 0 1 2.7 1.57L25.21 8l2.36 4l-2.72 2.4a8.9 8.9 0 0 1 0 3.13L27.57 20z",fill:"currentColor"},null,-1),G=t("path",{d:"M16 22a6 6 0 1 1 6-6a5.94 5.94 0 0 1-6 6zm0-10a3.91 3.91 0 0 0-4 4a3.91 3.91 0 0 0 4 4a3.91 3.91 0 0 0 4-4a3.91 3.91 0 0 0-4-4z",fill:"currentColor"},null,-1);var J={name:"carbon-settings",render:function(n,t){return s(),a("svg",X,[W,G])}};const Q={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 32 32"},Z=t("path",{d:"M28 4H10a2.006 2.006 0 0 0-2 2v14a2.006 2.006 0 0 0 2 2h18a2.006 2.006 0 0 0 2-2V6a2.006 2.006 0 0 0-2-2zm0 16H10V6h18z",fill:"currentColor"},null,-1),nn=t("path",{d:"M18 26H4V16h2v-2H4a2.006 2.006 0 0 0-2 2v10a2.006 2.006 0 0 0 2 2h14a2.006 2.006 0 0 0 2-2v-2h-2z",fill:"currentColor"},null,-1);var sn={name:"carbon-popup",render:function(n,t){return s(),a("svg",Q,[Z,nn])}};const an={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",width:"1.2em",height:"1.2em",preserveAspectRatio:"xMidYMid meet",viewBox:"0 0 32 32"},tn=t("path",{d:"M6 6h20.172l-3.586-3.586L24 1l6 6l-6 6l-1.414-1.414L26.172 8H6v7H4V8a2.002 2.002 0 0 1 2-2z",fill:"currentColor"},null,-1),pn=t("path",{d:"M9.414 20.414L5.828 24H26v-7h2v7a2.002 2.002 0 0 1-2 2H5.828l3.586 3.586L8 31l-6-6l6-6z",fill:"currentColor"},null,-1);var on={name:"carbon-repeat",render:function(n,t){return s(),a("svg",an,[tn,pn])}};const en={class:"relative overflow-hidden h-full w-full rounded"};var cn=p({props:{min:{type:Number,default:0},max:{type:Number,default:100},secondary:{type:Number,default:0},modelValue:{type:Number,required:!0}},emits:["update:modelValue"],setup(n,{emit:p}){const i=n,d=o(),b=o(!1),v=o(0);e("mouseup",(()=>b.value=!1));const g=c(i,"modelValue",p),{elementX:m,elementWidth:y}=l(d);return r([b,m],(()=>{const n=Math.max(0,Math.min(1,m.value/y.value));v.value=n*i.max,b.value&&(g.value=v.value)})),(p,o)=>(s(),a("div",{ref:d,class:"relative h-2 rounded cursor-pointer select-none bg-black dark:bg-white dark:bg-opacity-10 bg-opacity-20",onMousedown:o[1]||(o[1]=n=>b.value=!0)},[t("div",en,[t("div",{class:"h-full absolute opacity-30 left-0 top-0 bg-emerald-700 w-full rounded",style:{transform:`translateX(${n.secondary/n.max*100-100}%)`}},null,4),t("div",{class:"relative h-full w-full bg-emerald-500 rounded",style:{transform:`translateX(${k(g)/n.max*100-100}%)`}},null,4)]),t("div",{class:["absolute inset-0 hover:opacity-100 opacity-0",{"!opacity-100":b.value}]},[u(p.$slots,"default",{pendingValue:v.value,position:`${Math.max(0,Math.min(k(m),k(y)))}px`})],2)],544))}});const ln={class:"relative"};var rn=p({setup(n){const p=o(),c=o();i(p,(()=>c.value=!1)),e("keydown",(n=>{"Escape"===n.key&&c&&(c.value=!1)}));const l=()=>c.value=!0,r=()=>c.value=!1;return(n,o)=>(s(),a("div",ln,[u(n.$slots,"default",{open:l}),t("div",{ref:p,class:{"pointer-events-none opacity-0":!c.value}},[u(n.$slots,"menu",{isOpen:c.value,close:r})],2)]))}});const kn={class:"px-4 py-2 whitespace-nowrap flex flex-row gap-2 items-center hover:bg-emerald-600 cursor-pointer",tabindex:0};var un=p({setup:n=>(n,t)=>(s(),a("div",kn,[u(n.$slots,"default")]))});const dn={},bn={class:"animate-spin -ml-1 mr-3 h-12 w-12 text-white",fill:"none",viewBox:"0 0 24 24"},vn=t("circle",{class:"opacity-25",cx:"12",cy:"12",r:"10",stroke:"currentColor","stroke-width":"4"},null,-1),gn=t("path",{class:"opacity-75",fill:"currentColor",d:"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"},null,-1);dn.render=function(n,t){return s(),a("svg",bn,[vn,gn])};const mn={class:"relative bg-black"},yn={key:0,class:"absolute inset-0 grid place-items-center pointer-events-none bg-black bg-opacity-20"},fn={class:"flex flex-row items-center items-center"},hn={class:"flex flex-col flex-1 text-sm ml-2"},wn={class:"absolute bottom-0 right-0 bg-black rounded py-2 shadow"},xn=t("span",{class:"flex-1"},"Off",-1),Tn={class:"flex-1"},Cn={class:"absolute bottom-0 right-0 shadow py-2 bg-black rounded"},Mn=t("span",{class:"flex-1"},"Loop",-1),En={lang:"yaml"};var Ln=p({setup(n){const p=o(),e=o(!1),c=d(p,{src:{src:"https://upload.wikimedia.org/wikipedia/commons/transcoded/f/f1/Sintel_movie_4K.webm/Sintel_movie_4K.webm.1080p.vp9.webm",type:"video/webm"},tracks:[{default:!0,src:"https://gist.githubusercontent.com/jacobclevenger/a85a65a82d87d7c098e1a0972ef1f726/raw/f135ca4b6ce78552d80b515d68af5f5e5e2eb7c5/sentil-subtitles.vtt",kind:"subtitles",label:"English",srcLang:"en"},{src:"https://gist.githubusercontent.com/jacobclevenger/38f32925d20c683bf77ba33ff737891b/raw/0505e841cbbc3a4a598584b57ab411d29bfdcf0d/subtitles-fr.vtt",kind:"subtitles",label:"French",srcLang:"fr"}]}),{playing:l,buffered:r,currentTime:u,duration:i,tracks:C,waiting:L,selectedTrack:_,volume:I,muted:S,isPictureInPicture:K,supportsPictureInPicture:A,togglePictureInPicture:q,enableTrack:V,disableTrack:P}=c,U=E(b(c)),j=v((()=>r.value.length>0?r.value[r.value.length-1][1]:0)),H=n=>new Date(1e3*n).toISOString().substr(14,5);return(n,o)=>{const c=O,r=R,d=z,b=B,v=F,E=M,D=J,Y=sn,N=on;return s(),a(w,null,[t("div",{class:"outline-none",tabindex:0,autofocus:"",onKeydown:[o[7]||(o[7]=g(x((n=>l.value=!k(l)),["prevent"]),["space"])),o[8]||(o[8]=g((n=>u.value+=10),["right"])),o[9]||(o[9]=g((n=>u.value-=10),["left"]))]},[t("div",mn,[t("video",{ref:p,crossorigin:"anonymous",class:"w-full block",poster:"https://bitmovin.com/wp-content/uploads/2016/06/sintel-poster.jpg",loop:e.value,onClick:o[1]||(o[1]=n=>l.value=!k(l))},null,8,["loop"]),k(L)?(s(),a("div",yn,[t(dn)])):m("v-if",!0)]),t(cn,{modelValue:k(u),"onUpdate:modelValue":o[2]||(o[2]=n=>y(u)?u.value=n:null),max:k(i),secondary:k(j),class:"mt-2"},{default:f((({position:n,pendingValue:s})=>[t("div",{class:"absolute transform -translate-x-1/2 bg-black rounded px-2 bottom-0 mb-4 py-1 text-xs text-white",style:{left:n}},h(H(s)),5)])),_:1},8,["modelValue","max","secondary"]),t("div",fn,[t("button",{onClick:o[3]||(o[3]=n=>l.value=!k(l))},[k(l)?(s(),a(r,{key:1})):(s(),a(c,{key:0}))]),t("button",{onClick:o[4]||(o[4]=n=>S.value=!k(S))},[k(S)?(s(),a(d,{key:0})):(s(),a(b,{key:1}))]),t(cn,{modelValue:k(I),"onUpdate:modelValue":o[5]||(o[5]=n=>y(I)?I.value=n:null),max:1,class:"w-32 ml-2"},null,8,["modelValue"]),t("div",hn,h(H(k(u)))+" / "+h(H(k(i))),1),t(rn,{class:"mr-2"},{default:f((({open:n})=>[t("button",{onClick:n},[t(v)],8,["onClick"])])),menu:f((({close:n})=>[t("div",wn,[t(un,{onKeydown:o[6]||(o[6]=g(x((n=>k(P)()),["stop","prevent"]),["enter","space"])),onClick:()=>{k(P)(),n()}},{default:f((()=>[xn,t(E,{class:{"opacity-0":-1!==k(_)}},null,8,["class"])])),_:2},1032,["onClick"]),(s(!0),a(w,null,T(k(C),(p=>(s(),a(un,{key:p.id,onKeydown:g(x((n=>k(V)(p)),["stop","prevent"]),["enter","space"]),onClick:()=>{k(V)(p),n()}},{default:f((()=>[t("span",Tn,h(p.label),1),t(E,{class:{"opacity-0":"showing"!==p.mode}},null,8,["class"])])),_:2},1032,["onKeydown","onClick"])))),128))])])),_:1}),t(rn,null,{default:f((({open:n})=>[t("button",{class:"block",onClick:s=>n()},[t(D)],8,["onClick"])])),menu:f((({close:n})=>[t("div",Cn,[k(A)?(s(),a(un,{key:0,onClick:()=>{k(q)(),n()}},{default:f((()=>[t(Y),t("span",null,h(k(K)?"Exit":"Enter")+" Picture in Picture",1)])),_:2},1032,["onClick"])):m("v-if",!0),t(un,{onClick:()=>{e.value=!e.value,n()}},{default:f((()=>[t(N),Mn,e.value?(s(),a(E,{key:0})):m("v-if",!0)])),_:2},1032,["onClick"])])])),_:1})])],32),t("pre",En,h(k(U)),1)],64)}}});const _n=C('<h1 id="usemediacontrols"><a class="header-anchor" href="#usemediacontrols" aria-hidden="true">#</a> useMediaControls</h1><p>Reactive media controls for both <code>audio</code> and <code>video</code> elements</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><h3 id="basic-usage"><a class="header-anchor" href="#basic-usage" aria-hidden="true">#</a> Basic Usage</h3><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> onMounted<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useMediaControls <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> video <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> playing<span class="token punctuation">,</span> currentTime<span class="token punctuation">,</span> duration<span class="token punctuation">,</span> volume <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMediaControls</span><span class="token punctuation">(</span>video<span class="token punctuation">,</span> <span class="token punctuation">{</span> \n  src<span class="token operator">:</span> <span class="token string">&#39;video.mp4&#39;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// Change initial media properties</span>\n<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  volume<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0.5</span>\n  currentTime<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">60</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>playing = !playing<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Play / Pause<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span>{{ currentTime }} / {{ duration }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h3 id="proving-captions-subtitles-etc"><a class="header-anchor" href="#proving-captions-subtitles-etc" aria-hidden="true">#</a> Proving Captions, Subtitles, etc...</h3><p>You can provide captions, subtitles, etc in the <code>tracks</code> options of the <a href="/core/useMediaControls/"><code>useMediaControls</code></a>function. The function will return an array of tracks along with two functions for controlling them, <code>enableTrack</code>, <code>disableTrack</code>, and <code>selectedTrack</code>. Using these you can manage the currently selected track. <code>selectedTrack</code> will be <code>-1</code> if there is no selected track.</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">const</span> <span class="token punctuation">{</span> tracks<span class="token punctuation">,</span> enableTrack <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMediaControls</span><span class="token punctuation">(</span>video<span class="token punctuation">,</span> <span class="token punctuation">{</span> \n  src<span class="token operator">:</span> <span class="token string">&#39;video.mp4&#39;</span><span class="token punctuation">,</span>\n  tracks<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n      src<span class="token operator">:</span> <span class="token string">&#39;./subtitles.vtt&#39;</span><span class="token punctuation">,</span>\n      kind<span class="token operator">:</span> <span class="token string">&#39;subtitles&#39;</span><span class="token punctuation">,</span>\n      label<span class="token operator">:</span> <span class="token string">&#39;English&#39;</span><span class="token punctuation">,</span>\n      srcLang<span class="token operator">:</span> <span class="token string">&#39;en&#39;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>video<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>track in tacks<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>track.id<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>enableTrack(track)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    {{ track.label }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',8),On=C('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token comment">/**\n * Many of the jsdoc definitions here are modified version of the\n * documentation from MDN(https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement)\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UseMediaSource</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * The source url for the media\n   */</span>\n  src<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">/**\n   * The media codec type\n   */</span>\n  type<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UseMediaTextTrackSource</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Indicates that the track should be enabled unless the user&#39;s preferences indicate\n   * that another track is more appropriate\n   */</span>\n  <span class="token keyword">default</span><span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * How the text track is meant to be used. If omitted the default kind is subtitles.\n   */</span>\n  kind<span class="token operator">:</span> TextTrackKind\n  <span class="token comment">/**\n   * A user-readable title of the text track which is used by the browser\n   * when listing available text tracks.\n   */</span>\n  label<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">/**\n   * Address of the track (.vtt file). Must be a valid URL. This attribute\n   * must be specified and its URL value must have the same origin as the document\n   */</span>\n  src<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">/**\n   * Language of the track text data. It must be a valid BCP 47 language tag.\n   * If the kind attribute is set to subtitles, then srclang must be defined.\n   */</span>\n  srcLang<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">interface</span> <span class="token class-name">UseMediaControlsOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableDocument</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * The source for the media, may either be a string, a `UseMediaSource` object, or a list\n   * of `UseMediaSource` objects.\n   */</span>\n  src<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> UseMediaSource <span class="token operator">|</span> UseMediaSource<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>\n  <span class="token comment">/**\n   * A list of text tracks for the media\n   */</span>\n  tracks<span class="token operator">?</span><span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>UseMediaTextTrackSource<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">UseMediaTextTrack</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * The index of the text track\n   */</span>\n  id<span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token comment">/**\n   * The text track label\n   */</span>\n  label<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">/**\n   * Language of the track text data. It must be a valid BCP 47 language tag.\n   * If the kind attribute is set to subtitles, then srclang must be defined.\n   */</span>\n  language<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">/**\n   * Specifies the display mode of the text track, either `disabled`,\n   * `hidden`, or `showing`\n   */</span>\n  mode<span class="token operator">:</span> TextTrackMode\n  <span class="token comment">/**\n   * How the text track is meant to be used. If omitted the default kind is subtitles.\n   */</span>\n  kind<span class="token operator">:</span> TextTrackKind\n  <span class="token comment">/**\n   * Indicates the track&#39;s in-band metadata track dispatch type.\n   */</span>\n  inBandMetadataTrackDispatchType<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">/**\n   * A list of text track cues\n   */</span>\n  cues<span class="token operator">:</span> TextTrackCueList <span class="token operator">|</span> <span class="token keyword">null</span>\n  <span class="token comment">/**\n   * A list of active text track cues\n   */</span>\n  activeCues<span class="token operator">:</span> TextTrackCueList <span class="token operator">|</span> <span class="token keyword">null</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useMediaControls</span><span class="token punctuation">(</span>\n  target<span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>HTMLMediaElement <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> UseMediaControlsOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n  currentTime<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  duration<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  buffering<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  waiting<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  seeking<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  ended<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  stalled<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  buffered<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token punctuation">[</span><span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span>\n  playing<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  volume<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  muted<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  tracks<span class="token operator">:</span> Ref<span class="token operator">&lt;</span>\n    <span class="token punctuation">{</span>\n      id<span class="token operator">:</span> <span class="token builtin">number</span>\n      label<span class="token operator">:</span> <span class="token builtin">string</span>\n      language<span class="token operator">:</span> <span class="token builtin">string</span>\n      mode<span class="token operator">:</span> TextTrackMode\n      kind<span class="token operator">:</span> TextTrackKind\n      inBandMetadataTrackDispatchType<span class="token operator">:</span> <span class="token builtin">string</span>\n      cues<span class="token operator">:</span>\n        <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              endTime<span class="token operator">:</span> <span class="token builtin">number</span>\n              id<span class="token operator">:</span> <span class="token builtin">string</span>\n              onenter<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> TextTrackCue<span class="token punctuation">,</span> ev<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n              onexit<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> TextTrackCue<span class="token punctuation">,</span> ev<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n              pauseOnExit<span class="token operator">:</span> <span class="token builtin">boolean</span>\n              startTime<span class="token operator">:</span> <span class="token builtin">number</span>\n              <span class="token keyword">readonly</span> track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token keyword">readonly</span> activeCues<span class="token operator">:</span>\n                  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">any</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>\n                      <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IterableIterator<span class="token operator">&lt;</span>TextTrackCue<span class="token operator">&gt;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                  <span class="token operator">|</span> <span class="token keyword">null</span>\n                <span class="token keyword">readonly</span> cues<span class="token operator">:</span>\n                  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">any</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>\n                      <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IterableIterator<span class="token operator">&lt;</span>TextTrackCue<span class="token operator">&gt;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                  <span class="token operator">|</span> <span class="token keyword">null</span>\n                <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">string</span>\n                <span class="token keyword">readonly</span> inBandMetadataTrackDispatchType<span class="token operator">:</span> <span class="token builtin">string</span>\n                <span class="token keyword">readonly</span> kind<span class="token operator">:</span> TextTrackKind\n                <span class="token keyword">readonly</span> label<span class="token operator">:</span> <span class="token builtin">string</span>\n                <span class="token keyword">readonly</span> language<span class="token operator">:</span> <span class="token builtin">string</span>\n                mode<span class="token operator">:</span> TextTrackMode\n                oncuechange<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> TextTrack<span class="token punctuation">,</span> ev<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n                <span class="token function-variable function">addCue</span><span class="token operator">:</span> <span class="token punctuation">(</span>cue<span class="token operator">:</span> TextTrackCue<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n                <span class="token function-variable function">removeCue</span><span class="token operator">:</span> <span class="token punctuation">(</span>cue<span class="token operator">:</span> TextTrackCue<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n                addEventListener<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  <span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token string">&quot;cuechange&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                    type<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n                      <span class="token keyword">this</span><span class="token operator">:</span> TextTrack<span class="token punctuation">,</span>\n                      ev<span class="token operator">:</span> TextTrackEventMap<span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>\n                    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n                    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                  <span class="token punctuation">(</span>\n                    type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n                    listener<span class="token operator">:</span> EventListenerOrEventListenerObject<span class="token punctuation">,</span>\n                    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                <span class="token punctuation">}</span>\n                removeEventListener<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  <span class="token operator">&lt;</span><span class="token constant">K_1</span> <span class="token keyword">extends</span> <span class="token string">&quot;cuechange&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                    type<span class="token operator">:</span> <span class="token constant">K_1</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n                      <span class="token keyword">this</span><span class="token operator">:</span> TextTrack<span class="token punctuation">,</span>\n                      ev<span class="token operator">:</span> TextTrackEventMap<span class="token punctuation">[</span><span class="token constant">K_1</span><span class="token punctuation">]</span>\n                    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n                    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> EventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                  <span class="token punctuation">(</span>\n                    type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n                    listener<span class="token operator">:</span> EventListenerOrEventListenerObject<span class="token punctuation">,</span>\n                    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> EventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                <span class="token punctuation">}</span>\n                <span class="token function-variable function">dispatchEvent</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>\n              <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n              addEventListener<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">&lt;</span><span class="token constant">K_2</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> TextTrackCueEventMap<span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                  type<span class="token operator">:</span> <span class="token constant">K_2</span><span class="token punctuation">,</span>\n                  <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n                    <span class="token keyword">this</span><span class="token operator">:</span> TextTrackCue<span class="token punctuation">,</span>\n                    ev<span class="token operator">:</span> TextTrackCueEventMap<span class="token punctuation">[</span><span class="token constant">K_2</span><span class="token punctuation">]</span>\n                  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n                  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                <span class="token punctuation">(</span>\n                  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n                  listener<span class="token operator">:</span> EventListenerOrEventListenerObject<span class="token punctuation">,</span>\n                  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n              <span class="token punctuation">}</span>\n              removeEventListener<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">&lt;</span><span class="token constant">K_3</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> TextTrackCueEventMap<span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                  type<span class="token operator">:</span> <span class="token constant">K_3</span><span class="token punctuation">,</span>\n                  <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n                    <span class="token keyword">this</span><span class="token operator">:</span> TextTrackCue<span class="token punctuation">,</span>\n                    ev<span class="token operator">:</span> TextTrackCueEventMap<span class="token punctuation">[</span><span class="token constant">K_3</span><span class="token punctuation">]</span>\n                  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n                  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> EventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                <span class="token punctuation">(</span>\n                  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n                  listener<span class="token operator">:</span> EventListenerOrEventListenerObject<span class="token punctuation">,</span>\n                  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> EventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n              <span class="token punctuation">}</span>\n              <span class="token function-variable function">dispatchEvent</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">readonly</span> length<span class="token operator">:</span> <span class="token builtin">number</span>\n            <span class="token function-variable function">getCueById</span><span class="token operator">:</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> TextTrackCue <span class="token operator">|</span> <span class="token keyword">null</span>\n            <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IterableIterator<span class="token operator">&lt;</span>TextTrackCue<span class="token operator">&gt;</span>\n          <span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>\n            <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IterableIterator<span class="token operator">&lt;</span>TextTrackCue<span class="token operator">&gt;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token operator">|</span> <span class="token keyword">null</span>\n      activeCues<span class="token operator">:</span>\n        <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n              endTime<span class="token operator">:</span> <span class="token builtin">number</span>\n              id<span class="token operator">:</span> <span class="token builtin">string</span>\n              onenter<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> TextTrackCue<span class="token punctuation">,</span> ev<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n              onexit<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> TextTrackCue<span class="token punctuation">,</span> ev<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n              pauseOnExit<span class="token operator">:</span> <span class="token builtin">boolean</span>\n              startTime<span class="token operator">:</span> <span class="token builtin">number</span>\n              <span class="token keyword">readonly</span> track<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token keyword">readonly</span> activeCues<span class="token operator">:</span>\n                  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">any</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>\n                      <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IterableIterator<span class="token operator">&lt;</span>TextTrackCue<span class="token operator">&gt;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                  <span class="token operator">|</span> <span class="token keyword">null</span>\n                <span class="token keyword">readonly</span> cues<span class="token operator">:</span>\n                  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token builtin">any</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>\n                      <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IterableIterator<span class="token operator">&lt;</span>TextTrackCue<span class="token operator">&gt;</span>\n                    <span class="token punctuation">}</span><span class="token punctuation">)</span>\n                  <span class="token operator">|</span> <span class="token keyword">null</span>\n                <span class="token keyword">readonly</span> id<span class="token operator">:</span> <span class="token builtin">string</span>\n                <span class="token keyword">readonly</span> inBandMetadataTrackDispatchType<span class="token operator">:</span> <span class="token builtin">string</span>\n                <span class="token keyword">readonly</span> kind<span class="token operator">:</span> TextTrackKind\n                <span class="token keyword">readonly</span> label<span class="token operator">:</span> <span class="token builtin">string</span>\n                <span class="token keyword">readonly</span> language<span class="token operator">:</span> <span class="token builtin">string</span>\n                mode<span class="token operator">:</span> TextTrackMode\n                oncuechange<span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token operator">:</span> TextTrack<span class="token punctuation">,</span> ev<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n                <span class="token function-variable function">addCue</span><span class="token operator">:</span> <span class="token punctuation">(</span>cue<span class="token operator">:</span> TextTrackCue<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n                <span class="token function-variable function">removeCue</span><span class="token operator">:</span> <span class="token punctuation">(</span>cue<span class="token operator">:</span> TextTrackCue<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n                addEventListener<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  <span class="token operator">&lt;</span><span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token string">&quot;cuechange&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                    type<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n                      <span class="token keyword">this</span><span class="token operator">:</span> TextTrack<span class="token punctuation">,</span>\n                      ev<span class="token operator">:</span> TextTrackEventMap<span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span>\n                    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n                    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                  <span class="token punctuation">(</span>\n                    type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n                    listener<span class="token operator">:</span> EventListenerOrEventListenerObject<span class="token punctuation">,</span>\n                    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                <span class="token punctuation">}</span>\n                removeEventListener<span class="token operator">:</span> <span class="token punctuation">{</span>\n                  <span class="token operator">&lt;</span><span class="token constant">K_1</span> <span class="token keyword">extends</span> <span class="token string">&quot;cuechange&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                    type<span class="token operator">:</span> <span class="token constant">K_1</span><span class="token punctuation">,</span>\n                    <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n                      <span class="token keyword">this</span><span class="token operator">:</span> TextTrack<span class="token punctuation">,</span>\n                      ev<span class="token operator">:</span> TextTrackEventMap<span class="token punctuation">[</span><span class="token constant">K_1</span><span class="token punctuation">]</span>\n                    <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n                    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> EventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                  <span class="token punctuation">(</span>\n                    type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n                    listener<span class="token operator">:</span> EventListenerOrEventListenerObject<span class="token punctuation">,</span>\n                    options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> EventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                  <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                <span class="token punctuation">}</span>\n                <span class="token function-variable function">dispatchEvent</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>\n              <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">null</span>\n              addEventListener<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">&lt;</span><span class="token constant">K_2</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> TextTrackCueEventMap<span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                  type<span class="token operator">:</span> <span class="token constant">K_2</span><span class="token punctuation">,</span>\n                  <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n                    <span class="token keyword">this</span><span class="token operator">:</span> TextTrackCue<span class="token punctuation">,</span>\n                    ev<span class="token operator">:</span> TextTrackCueEventMap<span class="token punctuation">[</span><span class="token constant">K_2</span><span class="token punctuation">]</span>\n                  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n                  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                <span class="token punctuation">(</span>\n                  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n                  listener<span class="token operator">:</span> EventListenerOrEventListenerObject<span class="token punctuation">,</span>\n                  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> AddEventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n              <span class="token punctuation">}</span>\n              removeEventListener<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token operator">&lt;</span><span class="token constant">K_3</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> TextTrackCueEventMap<span class="token operator">&gt;</span><span class="token punctuation">(</span>\n                  type<span class="token operator">:</span> <span class="token constant">K_3</span><span class="token punctuation">,</span>\n                  <span class="token function-variable function">listener</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n                    <span class="token keyword">this</span><span class="token operator">:</span> TextTrackCue<span class="token punctuation">,</span>\n                    ev<span class="token operator">:</span> TextTrackCueEventMap<span class="token punctuation">[</span><span class="token constant">K_3</span><span class="token punctuation">]</span>\n                  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">any</span><span class="token punctuation">,</span>\n                  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> EventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n                <span class="token punctuation">(</span>\n                  type<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n                  listener<span class="token operator">:</span> EventListenerOrEventListenerObject<span class="token punctuation">,</span>\n                  options<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> EventListenerOptions <span class="token operator">|</span> <span class="token keyword">undefined</span>\n                <span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n              <span class="token punctuation">}</span>\n              <span class="token function-variable function">dispatchEvent</span><span class="token operator">:</span> <span class="token punctuation">(</span>event<span class="token operator">:</span> Event<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span>\n            <span class="token punctuation">}</span>\n            <span class="token keyword">readonly</span> length<span class="token operator">:</span> <span class="token builtin">number</span>\n            <span class="token function-variable function">getCueById</span><span class="token operator">:</span> <span class="token punctuation">(</span>id<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> TextTrackCue <span class="token operator">|</span> <span class="token keyword">null</span>\n            <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IterableIterator<span class="token operator">&lt;</span>TextTrackCue<span class="token operator">&gt;</span>\n          <span class="token punctuation">}</span> <span class="token operator">&amp;</span> <span class="token punctuation">{</span>\n            <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> IterableIterator<span class="token operator">&lt;</span>TextTrackCue<span class="token operator">&gt;</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token operator">|</span> <span class="token keyword">null</span>\n    <span class="token punctuation">}</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n  <span class="token operator">&gt;</span>\n  selectedTrack<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  <span class="token function-variable function">enableTrack</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n    track<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> UseMediaTextTrack<span class="token punctuation">,</span>\n    disableTracks<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token function-variable function">disableTrack</span><span class="token operator">:</span> <span class="token punctuation">(</span>track<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> UseMediaTextTrack <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  supportsPictureInPicture<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token keyword">undefined</span>\n  <span class="token function-variable function">togglePictureInPicture</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span><span class="token builtin">unknown</span><span class="token operator">&gt;</span>\n  isPictureInPicture<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  onSourceError<span class="token operator">:</span> EventHookOn<span class="token operator">&lt;</span>Event<span class="token operator">&gt;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">type</span> <span class="token class-name">UseMediaControlsReturn</span> <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> useMediaControls<span class="token operator">&gt;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useMediaControls/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),In='{"title":"useMediaControls","description":"","frontmatter":"category Browser","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":3,"title":"Basic Usage","slug":"basic-usage"},{"level":3,"title":"Proving Captions, Subtitles, etc...","slug":"proving-captions-subtitles-etc"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useMediaControls/index.md","lastUpdated":1626320652926}',Sn={};const Kn=Object.assign(Sn,{setup:function(p){return(p,o)=>{const e=n;return s(),a("div",null,[t(e,null,{default:f((()=>[t(Ln)])),_:1}),_n,m("FOOTER_STARTS"),On,m("FOOTER_ENDS")])}}});export default Kn;export{In as __pageData};
