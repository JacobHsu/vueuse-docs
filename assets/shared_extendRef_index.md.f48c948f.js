import{o as n,c as s,b as a,e}from"./app.5f9bb12a.js";const t='{"title":"extendRef","description":"","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"shared/extendRef/index.md","lastUpdated":1626320652934}',p={},o=e('<h1 id="extendref"><a class="header-anchor" href="#extendref" aria-hidden="true">#</a> extendRef</h1><p>Add extra attributes to Ref.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><blockquote><p>This function is <strong>NOT compatible with Vue 2</strong>.</p></blockquote><blockquote><p>Please note the extra attribute will not be accessible in Vue&#39;s template.</p></blockquote><div class="language-ts"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> extendRef <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@vueuse/core&#39;</span>\n\n<span class="token keyword">const</span> myRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> extended <span class="token operator">=</span> <span class="token function">extendRef</span><span class="token punctuation">(</span>myRef<span class="token punctuation">,</span> <span class="token punctuation">{</span> foo<span class="token operator">:</span> <span class="token string">&#39;extra data&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nextended<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;content&#39;</span>\nextended<span class="token punctuation">.</span>foo <span class="token operator">===</span> <span class="token string">&#39;extra data&#39;</span>\n</code></pre></div><p>Refs will be unwrapped and be reactive</p><div class="language-ts"><pre><code><span class="token keyword">const</span> myRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;content&#39;</span><span class="token punctuation">)</span>\n<span class="token keyword">const</span> extraRef <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;extra&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> extended <span class="token operator">=</span> <span class="token function">extendRef</span><span class="token punctuation">(</span>myRef<span class="token punctuation">,</span> <span class="token punctuation">{</span> extra<span class="token operator">:</span> extraRef <span class="token punctuation">}</span><span class="token punctuation">)</span>\n\nextended<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;content&#39;</span>\nextended<span class="token punctuation">.</span>extra <span class="token operator">===</span> <span class="token string">&#39;extra&#39;</span>\n\nextended<span class="token punctuation">.</span>extra <span class="token operator">=</span> <span class="token string">&#39;new data&#39;</span> <span class="token comment">// will trigger update</span>\nextraRef<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token string">&#39;new data&#39;</span>\n</code></pre></div>',8),c=e('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ExtendRefOptions<span class="token operator">&lt;</span>Unwrap <span class="token keyword">extends</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token builtin">boolean</span><span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Is the extends properties enumerable\n   *\n   * @default false\n   */</span>\n  enumerable<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * Unwrap for Ref properties\n   *\n   * @default true\n   */</span>\n  unwrap<span class="token operator">?</span><span class="token operator">:</span> Unwrap\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Overlad 1: Unwrap set to false\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">extendRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>\n  <span class="token constant">R</span> <span class="token keyword">extends</span> Ref<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  Extend <span class="token keyword">extends</span> object<span class="token punctuation">,</span>\n  Options <span class="token keyword">extends</span> ExtendRefOptions<span class="token operator">&lt;</span><span class="token boolean">false</span><span class="token operator">&gt;</span>\n<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ref<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">,</span> extend<span class="token operator">:</span> Extend<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> Options<span class="token punctuation">)</span><span class="token operator">:</span> ShallowUnwrapRef<span class="token operator">&lt;</span>Extend<span class="token operator">&gt;</span> <span class="token operator">&amp;</span> <span class="token constant">R</span>\n<span class="token comment">/**\n * Overlad 2: Unwrap unset or set to true\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">extendRef</span><span class="token generic class-name"><span class="token operator">&lt;</span>\n  <span class="token constant">R</span> <span class="token keyword">extends</span> Ref<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  Extend <span class="token keyword">extends</span> object<span class="token punctuation">,</span>\n  Options <span class="token keyword">extends</span> ExtendRefOptions\n<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>ref<span class="token operator">:</span> <span class="token constant">R</span><span class="token punctuation">,</span> extend<span class="token operator">:</span> Extend<span class="token punctuation">,</span> options<span class="token operator">?</span><span class="token operator">:</span> Options<span class="token punctuation">)</span><span class="token operator">:</span> Extend <span class="token operator">&amp;</span> <span class="token constant">R</span>\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/extendRef/index.ts" target="_blank" rel="noopener noreferrer">Source</a> â€¢ <a href="https://github.com/vueuse/vueuse/blob/main/packages/shared/extendRef/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4);p.render=function(e,t,p,r,l,k){return n(),s("div",null,[o,a("FOOTER_STARTS"),c,a("FOOTER_ENDS")])};export default p;export{t as __pageData};
