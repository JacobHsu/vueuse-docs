import{_ as n}from"./DemoContainer.vue_vue&type=script&setup=true&lang.538fc852.js";import{x as s,y as a,f as e,r as t,D as p,aB as o,o as c,c as l,a as r,u,d as i,t as k,w as d,b as g,e as v}from"./app.5f9bb12a.js";s("data-v-ab21ee0a");const b=r("p",null,"Swipe right",-1),w={class:"status"},h=r("br",null,null,-1);a();var m=e({setup(n){const s=t(null),a=t(null),e=p((()=>{var n;return null==(n=a.value)?void 0:n.offsetWidth})),d=t("0"),g=t(1),v=()=>{d.value="0",g.value=1},{direction:m,isSwiping:f,lengthX:y,lengthY:S}=o(s,{passive:!1,onSwipe(n){if(e.value)if(y.value<0){const n=Math.abs(y.value);d.value=`${n}px`,g.value=1.1-n/e.value}else d.value="0",g.value=1},onSwipeEnd(n,s){y.value<0&&e.value&&Math.abs(y.value)/e.value>=.5?(d.value="100%",g.value=0):(d.value="0",g.value=1)}});return(n,e)=>(c(),l("div",null,[r("div",{ref:a,class:"container select-none"},[r("button",{onClick:v}," Reset "),r("div",{ref:s,class:["overlay",{animated:!u(f)}],style:{left:d.value,opacity:g.value}},[b],6)],512),r("p",w,[i(" Direction: "+k(u(m)?u(m):"-")+" ",1),h,i(" lengthX: "+k(u(y))+" | lengthY: "+k(u(S)),1)])]))}});m.__scopeId="data-v-ab21ee0a";const f=v('<h1 id="useswipe"><a class="header-anchor" href="#useswipe" aria-hidden="true">#</a> useSwipe</h1><p>Reactive swipe detection based on <a href="https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent" target="_blank" rel="noopener noreferrer"><code>TouchEvents</code></a>.</p><h2 id="usage"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-html"><div class="highlight-lines"><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br></div><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>el<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    Swipe here\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> el <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> isSwiping<span class="token punctuation">,</span> direction <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useSwipe</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> el<span class="token punctuation">,</span> isSwiping<span class="token punctuation">,</span> direction <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span> \n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div>',4),y=v('<h2 id="type-declarations"><a class="header-anchor" href="#type-declarations" aria-hidden="true">#</a> Type Declarations</h2><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">enum</span> SwipeDirection <span class="token punctuation">{</span>\n  <span class="token constant">UP</span> <span class="token operator">=</span> <span class="token string">&quot;UP&quot;</span><span class="token punctuation">,</span>\n  <span class="token constant">RIGHT</span> <span class="token operator">=</span> <span class="token string">&quot;RIGHT&quot;</span><span class="token punctuation">,</span>\n  <span class="token constant">DOWN</span> <span class="token operator">=</span> <span class="token string">&quot;DOWN&quot;</span><span class="token punctuation">,</span>\n  <span class="token constant">LEFT</span> <span class="token operator">=</span> <span class="token string">&quot;LEFT&quot;</span><span class="token punctuation">,</span>\n  <span class="token constant">NONE</span> <span class="token operator">=</span> <span class="token string">&quot;NONE&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">SwipeOptions</span> <span class="token keyword">extends</span> <span class="token class-name">ConfigurableWindow</span> <span class="token punctuation">{</span>\n  <span class="token comment">/**\n   * Register events as passive\n   *\n   * @default true\n   */</span>\n  passive<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">/**\n   * @default 50\n   */</span>\n  threshold<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token comment">/**\n   * Callback on swipe start\n   */</span>\n  onSwipeStart<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> TouchEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">/**\n   * Callback on swipe moves\n   */</span>\n  onSwipe<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> TouchEvent<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">/**\n   * Callback on swipe ends\n   */</span>\n  onSwipeEnd<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> TouchEvent<span class="token punctuation">,</span> direction<span class="token operator">:</span> SwipeDirection<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">SwipeReturn</span> <span class="token punctuation">{</span>\n  isPassiveEventSupported<span class="token operator">:</span> <span class="token builtin">boolean</span>\n  isSwiping<span class="token operator">:</span> Ref<span class="token operator">&lt;</span><span class="token builtin">boolean</span><span class="token operator">&gt;</span>\n  direction<span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span>SwipeDirection <span class="token operator">|</span> <span class="token keyword">null</span><span class="token operator">&gt;</span>\n  coordsStart<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token keyword">readonly</span> x<span class="token operator">:</span> <span class="token builtin">number</span>\n    <span class="token keyword">readonly</span> y<span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token punctuation">}</span>\n  coordsEnd<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token keyword">readonly</span> x<span class="token operator">:</span> <span class="token builtin">number</span>\n    <span class="token keyword">readonly</span> y<span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token punctuation">}</span>\n  lengthX<span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  lengthY<span class="token operator">:</span> ComputedRef<span class="token operator">&lt;</span><span class="token builtin">number</span><span class="token operator">&gt;</span>\n  <span class="token function-variable function">stop</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n<span class="token punctuation">}</span>\n<span class="token comment">/**\n * Reactive swipe detection.\n *\n * @see /useSwipe\n * @param target\n * @param options\n */</span>\n<span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token function">useSwipe</span><span class="token punctuation">(</span>\n  target<span class="token operator">:</span> MaybeRef<span class="token operator">&lt;</span>EventTarget <span class="token operator">|</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>\n  options<span class="token operator">?</span><span class="token operator">:</span> SwipeOptions\n<span class="token punctuation">)</span><span class="token operator">:</span> SwipeReturn\n</code></pre></div><h2 id="source"><a class="header-anchor" href="#source" aria-hidden="true">#</a> Source</h2><p><a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/index.ts" target="_blank" rel="noopener noreferrer">Source</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/demo.vue" target="_blank" rel="noopener noreferrer">Demo</a> • <a href="https://github.com/vueuse/vueuse/blob/main/packages/core/useSwipe/index.md" target="_blank" rel="noopener noreferrer">Docs</a></p>',4),S='{"title":"useSwipe","description":"","frontmatter":"category Sensors","headers":[{"level":2,"title":"Usage","slug":"usage"},{"level":2,"title":"Type Declarations","slug":"type-declarations"},{"level":2,"title":"Source","slug":"source"}],"relativePath":"core/useSwipe/index.md","lastUpdated":1626320652930}',_={};const T=Object.assign(_,{setup:function(s){return(s,a)=>{const e=n;return c(),l("div",null,[r(e,null,{default:d((()=>[r(m)])),_:1}),f,g("FOOTER_STARTS"),y,g("FOOTER_ENDS")])}}});export default T;export{S as __pageData};
